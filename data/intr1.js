(function(){
	var loadHandler = window['i_{66F35FB5-4FED-4C26-9D2D-0D8B40100D5B}'];
	var interactionJson = "{"d":{"i":"interactivity_2r3929gjtchi","C":{"is":[{"i":"c79wep968255","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:24px;font-family:fnt4_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:24px;font-family:fnt4_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Layer</span></p>","a":"<p><b>Layer</b></p>","r":[],"d":["Layer"]},"co":2505822,"tp":"group","rd":0},{"i":"oztbhb6k8by1","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:32px;font-family:fnt4_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:32px;font-family:fnt4_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Start here</span></p>","a":"<p><b>Start here</b></p>","r":[],"d":["Start here"]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Use the self-diagnostic tool below to direct you to the relevant dimension of the framework and the resources on Teaching Gateway. The shades of different colours represent a progressive level of assessment design and development.</span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"color:#9e9bc6;font-size:20px;font-family:fnt2_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Ring 1:</span><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> Quick Start</span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"color:#6a68a5;font-size:20px;font-family:fnt2_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Ring 2:</span><span style=\"color:#ed5377;font-size:20px;font-family:fnt2_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> </span><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Planning ahead</span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"color:#5754bb;font-size:20px;font-family:fnt2_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Ring 3: </span><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Advanced</span></p>","a":"<p>Use the self-diagnostic tool below to direct you to the relevant dimension of the framework and the resources on Teaching Gateway. The shades of different colours represent a progressive level of assessment design and development.</p><p><b>Ring 1:</b> Quick Start</p><p><b>Ring 2: </b>Planning ahead</p><p><b>Ring 3: </b>Advanced</p>","r":[],"d":["Use the self-diagnostic tool below to direct you to the relevant dimension of the framework and the resources on Teaching Gateway. The shades of different colours represent a progressive level of assessment design and development.\nRing 1: Quick Start\nRing 2: Planning ahead\nRing 3: Advanced"]},"tp":"item"},{"i":"ttkha8akoy6","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:24px;font-family:fnt4_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:24px;font-family:fnt4_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Layer</span></p>","a":"<p><b>Layer</b></p>","r":[],"d":["Layer"]},"co":10723785,"tp":"group","rd":0},{"i":"8rsh7fdy8tw","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:32px;font-family:fnt4_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:32px;font-family:fnt4_31988, Arial, Serif, Sans-Serif;\">​</span></p>","a":"<p></p>","r":[],"d":[]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Quick Start: Learning Outcomes</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Learning outcomes refer to the knowledge, skills, and attributes that students need to demonstrate their learning. It is central that they be constructively aligned to course learning outcomes, and enable programme progression.</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0em;font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;\">​</span></p><ul><li style=\"line-height:1.275em;padding-top:0.4em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/learning-outcomes\" href=\"https://teaching.unsw.edu.au/learning-outcomes\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Writing Learning Outcomes</span></a><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> </span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/aligning-assessment-learning-outcomes\" href=\"https://teaching.unsw.edu.au/aligning-assessment-learning-outcomes\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Align assessments with outcomes</span></a></li></ul><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0em;font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;\">​</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;\">​</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;\">​</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:28px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:28px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;\">​</span></p>","a":"<p><u>Quick Start: Learning Outcomes</u></p><p>Learning outcomes refer to the knowledge, skills, and attributes that students need to demonstrate their learning. It is central that they be constructively aligned to course learning outcomes, and enable programme progression.</p><p></p><ul><li><a title=\"https://teaching.unsw.edu.au/learning-outcomes\" href=\"https://teaching.unsw.edu.au/learning-outcomes\" target=\"_blank\"><u>Writing Learning Outcomes</u></a> </li><li><a title=\"https://teaching.unsw.edu.au/aligning-assessment-learning-outcomes\" href=\"https://teaching.unsw.edu.au/aligning-assessment-learning-outcomes\" target=\"_blank\"><u>Align assessments with outcomes</u></a></li></ul><p></p><p></p><p></p><p></p>","r":[],"d":["Quick Start: Learning Outcomes\nLearning outcomes refer to the knowledge, skills, and attributes that students need to demonstrate their learning. It is central that they be constructively aligned to course learning outcomes, and enable programme progression.\n\nWriting Learning Outcomes \nAlign assessments with outcomes\n\n\n\n"]},"tp":"item"},{"i":"xuzti4ler66b","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:32px;font-family:fnt4_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:32px;font-family:fnt4_31988, Arial, Serif, Sans-Serif;\">​</span></p>","a":"<p></p>","r":[],"d":[]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Quick Start: Approaches to Assessment</span></p><p style=\"text-align:justify;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Approaches to assessment refers to the way in which a teacher assesses student knowledge, skills and behaviour. This includes the purpose and context of the assessment and the way in which the assessment is carried out such as: delivery mode, teaching philosophy and knowledge, skills and attributes being assessed.</span></p><p style=\"text-align:justify;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">This level typically involves: ​ </span></p><ul><li style=\"line-height:1.275em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Building foundational knowledge, skills and behaviours</span></li></ul><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;\">​</span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;\">​</span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">English, M. C. , &amp; Kitsantas, A. (2013). Supporting Student Self-Regulated Learning in Problem- and Project-Based Learning. Interdisciplinary Journal of Problem-Based Learning, 7(2). </span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Calvin Douglas Smith , Kate Worsfold , Lynda Davies , Ron Fisher &amp; Ruth McPhail (2013) Assessment literacy and student learning: the case for explicitly developing students ‘assessment literacy’, Assessment &amp; Evaluation in Higher Education, 38:1, 44-60, DOI: 10.1080/02602938.2011.598636 </span></p>","a":"<p><u>Quick Start: Approaches to Assessment</u></p><p>Approaches to assessment refers to the way in which a teacher assesses student knowledge, skills and behaviour. This includes the purpose and context of the assessment and the way in which the assessment is carried out such as: delivery mode, teaching philosophy and knowledge, skills and attributes being assessed.</p><p>This level typically involves: ​ </p><ul><li>Building foundational knowledge, skills and behaviours</li></ul><p></p><p></p><p>English, M. C. , &amp; Kitsantas, A. (2013). Supporting Student Self-Regulated Learning in Problem- and Project-Based Learning. Interdisciplinary Journal of Problem-Based Learning, 7(2). </p><p>Calvin Douglas Smith , Kate Worsfold , Lynda Davies , Ron Fisher &amp; Ruth McPhail (2013) Assessment literacy and student learning: the case for explicitly developing students ‘assessment literacy’, Assessment &amp; Evaluation in Higher Education, 38:1, 44-60, DOI: 10.1080/02602938.2011.598636 </p>","r":[],"d":["Quick Start: Approaches to Assessment\nApproaches to assessment refers to the way in which a teacher assesses student knowledge, skills and behaviour. This includes the purpose and context of the assessment and the way in which the assessment is carried out such as: delivery mode, teaching philosophy and knowledge, skills and attributes being assessed.\nThis level typically involves:  \nBuilding foundational knowledge, skills and behaviours\n\n\nEnglish, M. C. , & Kitsantas, A. (2013). Supporting Student Self-Regulated Learning in Problem- and Project-Based Learning. Interdisciplinary Journal of Problem-Based Learning, 7(2). \nCalvin Douglas Smith , Kate Worsfold , Lynda Davies , Ron Fisher & Ruth McPhail (2013) Assessment literacy and student learning: the case for explicitly developing students ‘assessment literacy’, Assessment & Evaluation in Higher Education, 38:1, 44-60, DOI: 10.1080/02602938.2011.598636 "]},"tp":"item"},{"i":"nrp9xog3lki0","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:32px;font-family:fnt4_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:32px;font-family:fnt4_31988, Arial, Serif, Sans-Serif;\">​</span></p>","a":"<p></p>","r":[],"d":[]},"c":{"h":"<p style=\"text-align:justify;line-height:1.5em;padding-top:0em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Quick Start: Assessment Tasks</span></p><p style=\"text-align:justify;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">The assessment task is the activity that the student engages in and demonstrates their understanding of the course material. This is significant as it is one of the main ways students learn and practice using their skills and knowledge. Good assessment tasks consider whether the product is an appropriate way of assessing their learning in the course and develops key skills. (See Approaches to Assessment). </span></p><ul><li style=\"line-height:1.275em;padding-top:0.4em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/assessing-classroom-participation\" href=\"https://teaching.unsw.edu.au/assessing-classroom-participation\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Class participation</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/assessing-extended-writing\" href=\"https://teaching.unsw.edu.au/assessing-extended-writing\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Essay &amp; reports</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Exams</span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Info-graphic</span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Poster</span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Quiz</span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Other</span></li></ul>","a":"<p><u>Quick Start: Assessment Tasks</u></p><p>The assessment task is the activity that the student engages in and demonstrates their understanding of the course material. This is significant as it is one of the main ways students learn and practice using their skills and knowledge. Good assessment tasks consider whether the product is an appropriate way of assessing their learning in the course and develops key skills. (See Approaches to Assessment). </p><ul><li><a title=\"https://teaching.unsw.edu.au/assessing-classroom-participation\" href=\"https://teaching.unsw.edu.au/assessing-classroom-participation\" target=\"_blank\"><u>Class participation</u></a></li><li><a title=\"https://teaching.unsw.edu.au/assessing-extended-writing\" href=\"https://teaching.unsw.edu.au/assessing-extended-writing\" target=\"_blank\"><u>Essay &amp; reports</u></a></li><li>Exams</li><li>Info-graphic</li><li>Poster</li><li>Quiz</li><li>Other</li></ul>","r":[],"d":["Quick Start: Assessment Tasks\nThe assessment task is the activity that the student engages in and demonstrates their understanding of the course material. This is significant as it is one of the main ways students learn and practice using their skills and knowledge. Good assessment tasks consider whether the product is an appropriate way of assessing their learning in the course and develops key skills. (See Approaches to Assessment). \nClass participation\nEssay & reports\nExams\nInfo-graphic\nPoster\nQuiz\nOther"]},"tp":"item"},{"i":"s3cs3pnsyn7j","t":{"h":"<p style=\"line-height:1.15em;padding-top:1em;padding-bottom:0.5em;font-size:32px;font-family:fnt4_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:32px;font-family:fnt4_31988, Arial, Serif, Sans-Serif;\">​</span></p>","a":"<p></p>","r":[],"d":[]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Quick Start: Design and Support</span></p><p style=\"text-align:justify;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Design assessment that provides students the necessary support and structure; consider the timing in the learning sequence to allow students to evaluate their learning prior to submitting an assessment product. ​ </span></p><ul><li style=\"line-height:1.275em;padding-top:0.4em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://www.gs.unsw.edu.au/policy/documents/assessmentdesignprocedure.pdf\" href=\"https://www.gs.unsw.edu.au/policy/documents/assessmentdesignprocedure.pdf\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Assessment Design Procedure</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/covid-19-exam-adjustment-guide-online-delivery\" href=\"https://teaching.unsw.edu.au/covid-19-exam-adjustment-guide-online-delivery\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Exam adjustments</span></a></li></ul><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;\">​</span></p><p style=\"text-align:justify;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;\">​</span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Hernandez, R. 2012. Does continuous assessment in higher education support student learning?, Higher Education, 64:489-502. </span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">English, M. C. , &amp; Kitsantas, A. (2013). Supporting Student Self-Regulated Learning in Problem- and Project-Based Learning. Interdisciplinary Journal of Problem-Based Learning, 7(2). </span></p>","a":"<p><u>Quick Start: Design and Support</u></p><p>Design assessment that provides students the necessary support and structure; consider the timing in the learning sequence to allow students to evaluate their learning prior to submitting an assessment product. ​ </p><ul><li><a title=\"https://www.gs.unsw.edu.au/policy/documents/assessmentdesignprocedure.pdf\" href=\"https://www.gs.unsw.edu.au/policy/documents/assessmentdesignprocedure.pdf\" target=\"_blank\"><u>Assessment Design Procedure</u></a></li><li><a title=\"https://teaching.unsw.edu.au/covid-19-exam-adjustment-guide-online-delivery\" href=\"https://teaching.unsw.edu.au/covid-19-exam-adjustment-guide-online-delivery\" target=\"_blank\"><u>Exam adjustments</u></a></li></ul><p></p><p></p><p>Hernandez, R. 2012. Does continuous assessment in higher education support student learning?, Higher Education, 64:489-502. </p><p>English, M. C. , &amp; Kitsantas, A. (2013). Supporting Student Self-Regulated Learning in Problem- and Project-Based Learning. Interdisciplinary Journal of Problem-Based Learning, 7(2). </p>","r":[],"d":["Quick Start: Design and Support\nDesign assessment that provides students the necessary support and structure; consider the timing in the learning sequence to allow students to evaluate their learning prior to submitting an assessment product.  \nAssessment Design Procedure\nExam adjustments\n\n\nHernandez, R. 2012. Does continuous assessment in higher education support student learning?, Higher Education, 64:489-502. \nEnglish, M. C. , & Kitsantas, A. (2013). Supporting Student Self-Regulated Learning in Problem- and Project-Based Learning. Interdisciplinary Journal of Problem-Based Learning, 7(2). "]},"tp":"item"},{"i":"8s3hxvmeq7ym","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:32px;font-family:fnt4_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:32px;font-family:fnt4_31988, Arial, Serif, Sans-Serif;\">​</span></p>","a":"<p></p>","r":[],"d":[]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Quick Start: Feedback</span></p><p style=\"text-align:justify;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Feedback processes refers to the way in which students develop understanding of how to improve the quality of their work. While traditionally, feedback has been seen through the lens of giving students information that justifies their grade, feedback is best for student learning when it focuses on the step that can be taken to improve student outcomes. ​ </span></p><ul><li style=\"line-height:1.275em;padding-top:0.4em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Direct feedback of student work</span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Specific and actionable feedback</span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/assessing-qualitative-differences-student-work\" href=\"https://teaching.unsw.edu.au/assessing-qualitative-differences-student-work\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">SOLO Taxonomy for assessing differences in student work</span></a></li></ul><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;\">​</span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Dawson, Phillip. (2015). Assessment rubrics: towards clearer and more replicable design, research and practice. Assessment &amp; Evaluation in Higher Education. 10.1080/02602938.2015.1111294. </span></p>","a":"<p><u>Quick Start: Feedback</u></p><p>Feedback processes refers to the way in which students develop understanding of how to improve the quality of their work. While traditionally, feedback has been seen through the lens of giving students information that justifies their grade, feedback is best for student learning when it focuses on the step that can be taken to improve student outcomes. ​ </p><ul><li>Direct feedback of student work</li><li>Specific and actionable feedback</li><li><a title=\"https://teaching.unsw.edu.au/assessing-qualitative-differences-student-work\" href=\"https://teaching.unsw.edu.au/assessing-qualitative-differences-student-work\" target=\"_blank\"><u>SOLO Taxonomy for assessing differences in student work</u></a></li></ul><p></p><p>Dawson, Phillip. (2015). Assessment rubrics: towards clearer and more replicable design, research and practice. Assessment &amp; Evaluation in Higher Education. 10.1080/02602938.2015.1111294. </p>","r":[],"d":["Quick Start: Feedback\nFeedback processes refers to the way in which students develop understanding of how to improve the quality of their work. While traditionally, feedback has been seen through the lens of giving students information that justifies their grade, feedback is best for student learning when it focuses on the step that can be taken to improve student outcomes.  \nDirect feedback of student work\nSpecific and actionable feedback\nSOLO Taxonomy for assessing differences in student work\n\nDawson, Phillip. (2015). Assessment rubrics: towards clearer and more replicable design, research and practice. Assessment & Evaluation in Higher Education. 10.1080/02602938.2015.1111294. "]},"tp":"item"},{"i":"8fagzpj4ghqa","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:32px;font-family:fnt4_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:32px;font-family:fnt4_31988, Arial, Serif, Sans-Serif;\">​</span></p>","a":"<p></p>","r":[],"d":[]},"c":{"h":"<p style=\"text-align:justify;line-height:1em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Quick Start: Evaluate Success</span></p><p style=\"text-align:justify;line-height:1em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Utilise the student evaluation system to determine what changes need to be made to the assessment to support student learning. </span></p><ul><li style=\"text-align:justify;line-height:0.85em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/reviewing-assessment-quality\" href=\"https://teaching.unsw.edu.au/reviewing-assessment-quality\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Review assessment quality</span></a></li></ul><p style=\"text-align:justify;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;\">​</span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Calvin Smith (2008) Building effectiveness in teaching through targeted evaluation and response: connecting evaluation to teaching improvement in higher education, Assessment &amp; Evaluation in Higher Education, 33:5, 517-533, DOI: 10.1080/02602930701698942 </span></p>","a":"<p><u>Quick Start: Evaluate Success</u></p><p>Utilise the student evaluation system to determine what changes need to be made to the assessment to support student learning. </p><ul><li><a title=\"https://teaching.unsw.edu.au/reviewing-assessment-quality\" href=\"https://teaching.unsw.edu.au/reviewing-assessment-quality\" target=\"_blank\"><u>Review assessment quality</u></a></li></ul><p></p><p>Calvin Smith (2008) Building effectiveness in teaching through targeted evaluation and response: connecting evaluation to teaching improvement in higher education, Assessment &amp; Evaluation in Higher Education, 33:5, 517-533, DOI: 10.1080/02602930701698942 </p>","r":[],"d":["Quick Start: Evaluate Success\nUtilise the student evaluation system to determine what changes need to be made to the assessment to support student learning. \nReview assessment quality\n\nCalvin Smith (2008) Building effectiveness in teaching through targeted evaluation and response: connecting evaluation to teaching improvement in higher education, Assessment & Evaluation in Higher Education, 33:5, 517-533, DOI: 10.1080/02602930701698942 "]},"tp":"item"},{"i":"x5i49xce057f","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:24px;font-family:fnt4_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:24px;font-family:fnt4_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Layer</span></p>","a":"<p><b>Layer</b></p>","r":[],"d":["Layer"]},"co":7763120,"tp":"group","rd":0},{"i":"i6dg1bb6k6w7","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:32px;font-family:fnt4_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:32px;font-family:fnt4_31988, Arial, Serif, Sans-Serif;\">​</span></p>","a":"<p></p>","r":[],"d":[]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Planning Ahead: Learning Outcomes</span></p><p style=\"text-align:justify;line-height:2em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">The learning outcomes should incorporate programme goals and graduate attributes in order to align more effectively the sequence of learning in building relevant skills, knowledge and attributes</span><span style=\"font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">. </span></p><ul><li style=\"line-height:1.275em;padding-top:0.4em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/sites/default/files/upload-files/UNSW%20Learning%20Outcomes%20Guide.pdf\" href=\"https://teaching.unsw.edu.au/sites/default/files/upload-files/UNSW%20Learning%20Outcomes%20Guide.pdf\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">UNSW Learning Outcomes guide</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/curriculum-mapping\" href=\"https://teaching.unsw.edu.au/curriculum-mapping\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Curriculum alignment and mapping</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/integrated-curriculum-framework\" href=\"https://teaching.unsw.edu.au/integrated-curriculum-framework\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Integrated Curriculum Framework</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/learning-outcomes\" href=\"https://teaching.unsw.edu.au/learning-outcomes\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Learning Outcomes</span></a><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> (Refer to higher level thinking)</span></li></ul><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;\">​</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:18px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:18px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;\">​</span></p>","a":"<p><u>Planning Ahead: Learning Outcomes</u></p><p>The learning outcomes should incorporate programme goals and graduate attributes in order to align more effectively the sequence of learning in building relevant skills, knowledge and attributes. </p><ul><li><a title=\"https://teaching.unsw.edu.au/sites/default/files/upload-files/UNSW%20Learning%20Outcomes%20Guide.pdf\" href=\"https://teaching.unsw.edu.au/sites/default/files/upload-files/UNSW%20Learning%20Outcomes%20Guide.pdf\" target=\"_blank\"><u>UNSW Learning Outcomes guide</u></a></li><li><a title=\"https://teaching.unsw.edu.au/curriculum-mapping\" href=\"https://teaching.unsw.edu.au/curriculum-mapping\" target=\"_blank\"><u>Curriculum alignment and mapping</u></a></li><li><a title=\"https://teaching.unsw.edu.au/integrated-curriculum-framework\" href=\"https://teaching.unsw.edu.au/integrated-curriculum-framework\" target=\"_blank\"><u>Integrated Curriculum Framework</u></a></li><li><a title=\"https://teaching.unsw.edu.au/learning-outcomes\" href=\"https://teaching.unsw.edu.au/learning-outcomes\" target=\"_blank\"><u>Learning Outcomes</u></a> (Refer to higher level thinking)</li></ul><p></p><p></p>","r":[],"d":["Planning Ahead: Learning Outcomes\nThe learning outcomes should incorporate programme goals and graduate attributes in order to align more effectively the sequence of learning in building relevant skills, knowledge and attributes. \nUNSW Learning Outcomes guide\nCurriculum alignment and mapping\nIntegrated Curriculum Framework\nLearning Outcomes (Refer to higher level thinking)\n\n"]},"tp":"item"},{"i":"vdz6shppxql5","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:32px;font-family:fnt4_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:32px;font-family:fnt4_31988, Arial, Serif, Sans-Serif;\">​</span></p>","a":"<p></p>","r":[],"d":[]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Planning Ahead: Approaches to Assessment</span></p><p style=\"text-align:justify;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Ways of conducting assessment can be leveraged as the basis for designing assessments that focus on student learning, looking at not just the product but incorporating the process of student learning in the task. </span></p><p style=\"text-align:justify;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">This level typically involves: ​ </span></p><ul><li style=\"line-height:1.275em;padding-top:0.4em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Assessment to drive learning</span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Student collaboration </span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Challenging learners for higher order thinking</span></li></ul><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;\">​</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;\">​</span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;\">​</span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">English, M. C. , &amp; Kitsantas, A. (2013). Supporting Student Self-Regulated Learning in Problem- and Project-Based Learning. Interdisciplinary Journal of Problem-Based Learning, 7(2). </span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Calvin Douglas Smith , Kate Worsfold , Lynda Davies , Ron Fisher &amp; Ruth McPhail (2013) Assessment literacy and student learning: the case for explicitly developing students ‘assessment literacy’, Assessment &amp; Evaluation in Higher Education, 38:1, 44-60, DOI: 10.1080/02602938.2011.598636 </span></p>","a":"<p><u>Planning Ahead: Approaches to Assessment</u></p><p>Ways of conducting assessment can be leveraged as the basis for designing assessments that focus on student learning, looking at not just the product but incorporating the process of student learning in the task. </p><p>This level typically involves: ​ </p><ul><li>Assessment to drive learning</li><li>Student collaboration </li><li>Challenging learners for higher order thinking</li></ul><p></p><p></p><p></p><p>English, M. C. , &amp; Kitsantas, A. (2013). Supporting Student Self-Regulated Learning in Problem- and Project-Based Learning. Interdisciplinary Journal of Problem-Based Learning, 7(2). </p><p>Calvin Douglas Smith , Kate Worsfold , Lynda Davies , Ron Fisher &amp; Ruth McPhail (2013) Assessment literacy and student learning: the case for explicitly developing students ‘assessment literacy’, Assessment &amp; Evaluation in Higher Education, 38:1, 44-60, DOI: 10.1080/02602938.2011.598636 </p>","r":[],"d":["Planning Ahead: Approaches to Assessment\nWays of conducting assessment can be leveraged as the basis for designing assessments that focus on student learning, looking at not just the product but incorporating the process of student learning in the task. \nThis level typically involves:  \nAssessment to drive learning\nStudent collaboration \nChallenging learners for higher order thinking\n\n\n\nEnglish, M. C. , & Kitsantas, A. (2013). Supporting Student Self-Regulated Learning in Problem- and Project-Based Learning. Interdisciplinary Journal of Problem-Based Learning, 7(2). \nCalvin Douglas Smith , Kate Worsfold , Lynda Davies , Ron Fisher & Ruth McPhail (2013) Assessment literacy and student learning: the case for explicitly developing students ‘assessment literacy’, Assessment & Evaluation in Higher Education, 38:1, 44-60, DOI: 10.1080/02602938.2011.598636 "]},"tp":"item"},{"i":"3wdooomljl7w","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:32px;font-family:fnt4_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:32px;font-family:fnt4_31988, Arial, Serif, Sans-Serif;\">​</span></p>","a":"<p></p>","r":[],"d":[]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Planning Ahead: Assessment Tasks</span></p><p style=\"text-align:justify;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Assessment tasks can be used in ways beyond their traditional assessment types. They can also be combined to make for more diverse or authentic assessment experiences. The resources below explore and move towards enriched student learning experiences. ​ </span></p><ul><li style=\"line-height:1.275em;padding-top:0.4em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/selecting-assessment-methods\" href=\"https://teaching.unsw.edu.au/selecting-assessment-methods\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Selecting Assessment Methods</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Alternative assessment types</span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/assessment-case-studies-and-scenarios\" href=\"https://teaching.unsw.edu.au/assessment-case-studies-and-scenarios\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Case studies and scenario-based</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/assessing-laboratory-learning\" href=\"https://teaching.unsw.edu.au/assessing-laboratory-learning\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Clinical and Lab</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/assessing-extended-writing\" href=\"https://teaching.unsw.edu.au/assessing-extended-writing\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Extended writing</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/oral-presentations\" href=\"https://teaching.unsw.edu.au/oral-presentations\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Oral presentations</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Performance based</span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/assessing-portfolio\" href=\"https://teaching.unsw.edu.au/assessing-portfolio\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Portfolios</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/assessing-role-play-and-simulation\" href=\"https://teaching.unsw.edu.au/assessing-role-play-and-simulation\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Role play and Simulation</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Other</span></li></ul>","a":"<p><u>Planning Ahead: Assessment Tasks</u></p><p>Assessment tasks can be used in ways beyond their traditional assessment types. They can also be combined to make for more diverse or authentic assessment experiences. The resources below explore and move towards enriched student learning experiences. ​ </p><ul><li><a title=\"https://teaching.unsw.edu.au/selecting-assessment-methods\" href=\"https://teaching.unsw.edu.au/selecting-assessment-methods\" target=\"_blank\"><u>Selecting Assessment Methods</u></a></li><li>Alternative assessment types</li><li><a title=\"https://teaching.unsw.edu.au/assessment-case-studies-and-scenarios\" href=\"https://teaching.unsw.edu.au/assessment-case-studies-and-scenarios\" target=\"_blank\"><u>Case studies and scenario-based</u></a></li><li><a title=\"https://teaching.unsw.edu.au/assessing-laboratory-learning\" href=\"https://teaching.unsw.edu.au/assessing-laboratory-learning\" target=\"_blank\"><u>Clinical and Lab</u></a></li><li><a title=\"https://teaching.unsw.edu.au/assessing-extended-writing\" href=\"https://teaching.unsw.edu.au/assessing-extended-writing\" target=\"_blank\"><u>Extended writing</u></a></li><li><a title=\"https://teaching.unsw.edu.au/oral-presentations\" href=\"https://teaching.unsw.edu.au/oral-presentations\" target=\"_blank\"><u>Oral presentations</u></a></li><li>Performance based</li><li><a title=\"https://teaching.unsw.edu.au/assessing-portfolio\" href=\"https://teaching.unsw.edu.au/assessing-portfolio\" target=\"_blank\"><u>Portfolios</u></a></li><li><a title=\"https://teaching.unsw.edu.au/assessing-role-play-and-simulation\" href=\"https://teaching.unsw.edu.au/assessing-role-play-and-simulation\" target=\"_blank\"><u>Role play and Simulation</u></a></li><li>Other</li></ul>","r":[],"d":["Planning Ahead: Assessment Tasks\nAssessment tasks can be used in ways beyond their traditional assessment types. They can also be combined to make for more diverse or authentic assessment experiences. The resources below explore and move towards enriched student learning experiences.  \nSelecting Assessment Methods\nAlternative assessment types\nCase studies and scenario-based\nClinical and Lab\nExtended writing\nOral presentations\nPerformance based\nPortfolios\nRole play and Simulation\nOther"]},"tp":"item"},{"i":"3zzezoddirh0","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:32px;font-family:fnt4_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:32px;font-family:fnt4_31988, Arial, Serif, Sans-Serif;\">​</span></p>","a":"<p></p>","r":[],"d":[]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Planning Ahead: Design and Support</span></p><p style=\"text-align:justify;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Support students learning by providing opportunities for dialogue about the assessment prior to its submission. Actively engage students in assessing whether they have the tools to be able to complete the task and whether they understand how they will be assessed. </span></p><ul><li style=\"line-height:1.275em;padding-top:0.4em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://www.gs.unsw.edu.au/policy/documents/assessmentdesignprocedure.pdf\" href=\"https://www.gs.unsw.edu.au/policy/documents/assessmentdesignprocedure.pdf\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Assessment Design Procedure</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/assessing-inclusively\" href=\"https://teaching.unsw.edu.au/assessing-inclusively\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Assessing inclusively </span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/covid-19-exam-adjustment-guide-online-delivery\" href=\"https://teaching.unsw.edu.au/covid-19-exam-adjustment-guide-online-delivery\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Exam adjustments</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/standards-based-assessment\" href=\"https://teaching.unsw.edu.au/standards-based-assessment\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Standards-Based Assessment</span></a></li></ul><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;\">​</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;\">​</span></p><p style=\"text-align:justify;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\">​<span style=\"font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> </span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Hernandez, R. 2012. Does continuous assessment in higher education support student learning?, Higher Education, 64:489-502. </span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">English, M. C. , &amp; Kitsantas, A. (2013). Supporting Student Self-Regulated Learning in Problem- and Project-Based Learning. Interdisciplinary Journal of Problem-Based Learning, 7(2). </span></p>","a":"<p><u>Planning Ahead: Design and Support</u></p><p>Support students learning by providing opportunities for dialogue about the assessment prior to its submission. Actively engage students in assessing whether they have the tools to be able to complete the task and whether they understand how they will be assessed. </p><ul><li><a title=\"https://www.gs.unsw.edu.au/policy/documents/assessmentdesignprocedure.pdf\" href=\"https://www.gs.unsw.edu.au/policy/documents/assessmentdesignprocedure.pdf\" target=\"_blank\"><u>Assessment Design Procedure</u></a></li><li><a title=\"https://teaching.unsw.edu.au/assessing-inclusively\" href=\"https://teaching.unsw.edu.au/assessing-inclusively\" target=\"_blank\"><u>Assessing inclusively </u></a></li><li><a title=\"https://teaching.unsw.edu.au/covid-19-exam-adjustment-guide-online-delivery\" href=\"https://teaching.unsw.edu.au/covid-19-exam-adjustment-guide-online-delivery\" target=\"_blank\"><u>Exam adjustments</u></a></li><li><a title=\"https://teaching.unsw.edu.au/standards-based-assessment\" href=\"https://teaching.unsw.edu.au/standards-based-assessment\" target=\"_blank\"><u>Standards-Based Assessment</u></a></li></ul><p></p><p></p><p>​ </p><p>Hernandez, R. 2012. Does continuous assessment in higher education support student learning?, Higher Education, 64:489-502. </p><p>English, M. C. , &amp; Kitsantas, A. (2013). Supporting Student Self-Regulated Learning in Problem- and Project-Based Learning. Interdisciplinary Journal of Problem-Based Learning, 7(2). </p>","r":[],"d":["Planning Ahead: Design and Support\nSupport students learning by providing opportunities for dialogue about the assessment prior to its submission. Actively engage students in assessing whether they have the tools to be able to complete the task and whether they understand how they will be assessed. \nAssessment Design Procedure\nAssessing inclusively \nExam adjustments\nStandards-Based Assessment\n\n\n \nHernandez, R. 2012. Does continuous assessment in higher education support student learning?, Higher Education, 64:489-502. \nEnglish, M. C. , & Kitsantas, A. (2013). Supporting Student Self-Regulated Learning in Problem- and Project-Based Learning. Interdisciplinary Journal of Problem-Based Learning, 7(2). "]},"tp":"item"},{"i":"1ofv2n30l0m8","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:32px;font-family:fnt4_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:32px;font-family:fnt4_31988, Arial, Serif, Sans-Serif;\">​</span></p>","a":"<p></p>","r":[],"d":[]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Planning Ahead: Feedback</span></p><p style=\"text-align:justify;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Student learning through feedback can be promoted by involving students in understanding the quality or standards through structured feedback mechanisms such as rubrics, marking guides, dialogue about quality, and regular and consistent points of feedback. Opportunities for students to use this feedback to improve on their learning is also useful.</span></p><ul><li style=\"line-height:1.275em;padding-top:0.4em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/assessment-feedback\" href=\"https://teaching.unsw.edu.au/assessment-feedback\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Constructive, timely and meaningful feedback</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Criteria </span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/assessment-rubrics\" href=\"https://teaching.unsw.edu.au/assessment-rubrics\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Rubrics</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Marking guides</span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/peer-assessment\" href=\"https://teaching.unsw.edu.au/peer-assessment\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Peer feedback</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Previous assessment evaluation of success</span></li></ul><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;\">​</span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Dawson, Phillip. (2015). Assessment rubrics: towards clearer and more replicable design, research and practice. Assessment &amp; Evaluation in Higher Education. 10.1080/02602938.2015.1111294. </span></p>","a":"<p><u>Planning Ahead: Feedback</u></p><p>Student learning through feedback can be promoted by involving students in understanding the quality or standards through structured feedback mechanisms such as rubrics, marking guides, dialogue about quality, and regular and consistent points of feedback. Opportunities for students to use this feedback to improve on their learning is also useful.</p><ul><li><a title=\"https://teaching.unsw.edu.au/assessment-feedback\" href=\"https://teaching.unsw.edu.au/assessment-feedback\" target=\"_blank\"><u>Constructive, timely and meaningful feedback</u></a></li><li>Criteria </li><li><a title=\"https://teaching.unsw.edu.au/assessment-rubrics\" href=\"https://teaching.unsw.edu.au/assessment-rubrics\" target=\"_blank\"><u>Rubrics</u></a></li><li>Marking guides</li><li><a title=\"https://teaching.unsw.edu.au/peer-assessment\" href=\"https://teaching.unsw.edu.au/peer-assessment\" target=\"_blank\"><u>Peer feedback</u></a></li><li>Previous assessment evaluation of success</li></ul><p></p><p>Dawson, Phillip. (2015). Assessment rubrics: towards clearer and more replicable design, research and practice. Assessment &amp; Evaluation in Higher Education. 10.1080/02602938.2015.1111294. </p>","r":[],"d":["Planning Ahead: Feedback\nStudent learning through feedback can be promoted by involving students in understanding the quality or standards through structured feedback mechanisms such as rubrics, marking guides, dialogue about quality, and regular and consistent points of feedback. Opportunities for students to use this feedback to improve on their learning is also useful.\nConstructive, timely and meaningful feedback\nCriteria \nRubrics\nMarking guides\nPeer feedback\nPrevious assessment evaluation of success\n\nDawson, Phillip. (2015). Assessment rubrics: towards clearer and more replicable design, research and practice. Assessment & Evaluation in Higher Education. 10.1080/02602938.2015.1111294. "]},"tp":"item"},{"i":"nto5cna1zwux","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:32px;font-family:fnt4_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:32px;font-family:fnt4_31988, Arial, Serif, Sans-Serif;\">​</span></p>","a":"<p></p>","r":[],"d":[]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Planning Ahead: Evaluate Success</span></p><p style=\"text-align:justify;line-height:1.5em;padding-top:0.4em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Engage in community of practice and development programmes with colleagues to evaluate assessment practices and re-design assessment. ​ Observe trends over consecutive iterations of the course to determine reoccurring student assessment literacy issues. </span></p><ul><li style=\"line-height:1.275em;padding-top:0.4em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/evaluating-learning-teaching\" href=\"https://teaching.unsw.edu.au/evaluating-learning-teaching\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Evaluating Learning and Teaching</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/reviewing-assessment-quality\" href=\"https://teaching.unsw.edu.au/reviewing-assessment-quality\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Review assessment quality</span></a></li></ul><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;\">​</span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Calvin Smith (2008) Building effectiveness in teaching through targeted evaluation and response: connecting evaluation to teaching improvement in higher education, Assessment &amp; Evaluation in Higher Education, 33:5, 517-533, DOI: 10.1080/02602930701698942 </span></p>","a":"<p><u>Planning Ahead: Evaluate Success</u></p><p>Engage in community of practice and development programmes with colleagues to evaluate assessment practices and re-design assessment. ​ Observe trends over consecutive iterations of the course to determine reoccurring student assessment literacy issues. </p><ul><li><a title=\"https://teaching.unsw.edu.au/evaluating-learning-teaching\" href=\"https://teaching.unsw.edu.au/evaluating-learning-teaching\" target=\"_blank\"><u>Evaluating Learning and Teaching</u></a></li><li><a title=\"https://teaching.unsw.edu.au/reviewing-assessment-quality\" href=\"https://teaching.unsw.edu.au/reviewing-assessment-quality\" target=\"_blank\"><u>Review assessment quality</u></a></li></ul><p></p><p>Calvin Smith (2008) Building effectiveness in teaching through targeted evaluation and response: connecting evaluation to teaching improvement in higher education, Assessment &amp; Evaluation in Higher Education, 33:5, 517-533, DOI: 10.1080/02602930701698942 </p>","r":[],"d":["Planning Ahead: Evaluate Success\nEngage in community of practice and development programmes with colleagues to evaluate assessment practices and re-design assessment.  Observe trends over consecutive iterations of the course to determine reoccurring student assessment literacy issues. \nEvaluating Learning and Teaching\nReview assessment quality\n\nCalvin Smith (2008) Building effectiveness in teaching through targeted evaluation and response: connecting evaluation to teaching improvement in higher education, Assessment & Evaluation in Higher Education, 33:5, 517-533, DOI: 10.1080/02602930701698942 "]},"tp":"item"},{"i":"ioa1cocyj007","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:24px;font-family:fnt4_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:24px;font-family:fnt4_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Layer</span></p>","a":"<p><b>Layer</b></p>","r":[],"d":["Layer"]},"co":5723323,"tp":"group","rd":0},{"i":"4qngh8k5pr2o","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:40px;font-family:fnt4_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:40px;font-family:fnt4_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Learning Outcomes</span></p>","a":"<p><b>Learning Outcomes</b></p>","r":[],"d":["Learning Outcomes"]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Advanced</span></p><p style=\"text-align:justify;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Learning outcomes are most effective when they incorporate the, real world purpose for the course, programme and interdisciplinary objectives. Allowing students input on the personal goals of assessment can also increase student motivation and utilize learning outcomes to optimize their experience of learning and assessment. </span></p><ul><li style=\"line-height:1.275em;padding-top:0.4em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/sites/default/files/upload-files/UNSW%20Learning%20Outcomes%20Guide.pdf\" href=\"https://teaching.unsw.edu.au/sites/default/files/upload-files/UNSW%20Learning%20Outcomes%20Guide.pdf\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">UNSW Learning Outcomes guide</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/integrated-curriculum-framework\" href=\"https://teaching.unsw.edu.au/integrated-curriculum-framework\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Integrated Curriculum Framework</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/curriculum-mapping\" href=\"https://teaching.unsw.edu.au/curriculum-mapping\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Curriculum alignment and mapping</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/graduate-capabilities\" href=\"https://teaching.unsw.edu.au/graduate-capabilities\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Skills and graduate attributes</span></a><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> </span></li></ul><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;\">​</span></p>","a":"<p><u>Advanced</u></p><p>Learning outcomes are most effective when they incorporate the, real world purpose for the course, programme and interdisciplinary objectives. Allowing students input on the personal goals of assessment can also increase student motivation and utilize learning outcomes to optimize their experience of learning and assessment. </p><ul><li><a title=\"https://teaching.unsw.edu.au/sites/default/files/upload-files/UNSW%20Learning%20Outcomes%20Guide.pdf\" href=\"https://teaching.unsw.edu.au/sites/default/files/upload-files/UNSW%20Learning%20Outcomes%20Guide.pdf\" target=\"_blank\"><u>UNSW Learning Outcomes guide</u></a></li><li><a title=\"https://teaching.unsw.edu.au/integrated-curriculum-framework\" href=\"https://teaching.unsw.edu.au/integrated-curriculum-framework\" target=\"_blank\"><u>Integrated Curriculum Framework</u></a></li><li><a title=\"https://teaching.unsw.edu.au/curriculum-mapping\" href=\"https://teaching.unsw.edu.au/curriculum-mapping\" target=\"_blank\"><u>Curriculum alignment and mapping</u></a></li><li><a title=\"https://teaching.unsw.edu.au/graduate-capabilities\" href=\"https://teaching.unsw.edu.au/graduate-capabilities\" target=\"_blank\"><u>Skills and graduate attributes</u></a> </li></ul><p></p>","r":[],"d":["Advanced\nLearning outcomes are most effective when they incorporate the, real world purpose for the course, programme and interdisciplinary objectives. Allowing students input on the personal goals of assessment can also increase student motivation and utilize learning outcomes to optimize their experience of learning and assessment. \nUNSW Learning Outcomes guide\nIntegrated Curriculum Framework\nCurriculum alignment and mapping\nSkills and graduate attributes \n"]},"tp":"item"},{"i":"leczvjcrr3z0","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:32px;font-family:fnt4_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:32px;font-family:fnt4_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Approaches to Assessment</span></p>","a":"<p><b>Approaches to Assessment</b></p>","r":[],"d":["Approaches to Assessment"]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Advanced</span></p><p style=\"text-align:justify;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Approaches to assessment can be applied to make assessment more applicable to real world environments, develop abilities to work across disciplines, be creative and analytical. Students and employers can be more actively involved in creating the structures and criteria by which they will be assessed. </span></p><p style=\"text-align:justify;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">This layer typically involves: ​ </span></p><ul><li style=\"line-height:1.275em;padding-top:0.4em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/authentic-assessment\" href=\"https://teaching.unsw.edu.au/authentic-assessment\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Authentic Assessment</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Assessment to drive Learning</span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Guided Inquiry</span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/work-integrated-learning\" href=\"https://teaching.unsw.edu.au/work-integrated-learning\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">WIL</span></a></li></ul><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;\">​</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;\">​</span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">English, M. C. , &amp; Kitsantas, A. (2013). Supporting Student Self-Regulated Learning in Problem- and Project-Based Learning. Interdisciplinary Journal of Problem-Based Learning, 7(2). </span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Calvin Douglas Smith , Kate Worsfold , Lynda Davies , Ron Fisher &amp; Ruth McPhail (2013) Assessment literacy and student learning: the case for explicitly developing students ‘assessment literacy’, Assessment &amp; Evaluation in Higher Education, 38:1, 44-60, DOI: 10.1080/02602938.2011.598636 </span></p>","a":"<p><u>Advanced</u></p><p>Approaches to assessment can be applied to make assessment more applicable to real world environments, develop abilities to work across disciplines, be creative and analytical. Students and employers can be more actively involved in creating the structures and criteria by which they will be assessed. </p><p>This layer typically involves: ​ </p><ul><li><a title=\"https://teaching.unsw.edu.au/authentic-assessment\" href=\"https://teaching.unsw.edu.au/authentic-assessment\" target=\"_blank\"><u>Authentic Assessment</u></a></li><li>Assessment to drive Learning</li><li>Guided Inquiry</li><li><a title=\"https://teaching.unsw.edu.au/work-integrated-learning\" href=\"https://teaching.unsw.edu.au/work-integrated-learning\" target=\"_blank\"><u>WIL</u></a></li></ul><p></p><p></p><p>English, M. C. , &amp; Kitsantas, A. (2013). Supporting Student Self-Regulated Learning in Problem- and Project-Based Learning. Interdisciplinary Journal of Problem-Based Learning, 7(2). </p><p>Calvin Douglas Smith , Kate Worsfold , Lynda Davies , Ron Fisher &amp; Ruth McPhail (2013) Assessment literacy and student learning: the case for explicitly developing students ‘assessment literacy’, Assessment &amp; Evaluation in Higher Education, 38:1, 44-60, DOI: 10.1080/02602938.2011.598636 </p>","r":[],"d":["Advanced\nApproaches to assessment can be applied to make assessment more applicable to real world environments, develop abilities to work across disciplines, be creative and analytical. Students and employers can be more actively involved in creating the structures and criteria by which they will be assessed. \nThis layer typically involves:  \nAuthentic Assessment\nAssessment to drive Learning\nGuided Inquiry\nWIL\n\n\nEnglish, M. C. , & Kitsantas, A. (2013). Supporting Student Self-Regulated Learning in Problem- and Project-Based Learning. Interdisciplinary Journal of Problem-Based Learning, 7(2). \nCalvin Douglas Smith , Kate Worsfold , Lynda Davies , Ron Fisher & Ruth McPhail (2013) Assessment literacy and student learning: the case for explicitly developing students ‘assessment literacy’, Assessment & Evaluation in Higher Education, 38:1, 44-60, DOI: 10.1080/02602938.2011.598636 "]},"tp":"item"},{"i":"9qxjr50a12d","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:32px;font-family:fnt4_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:32px;font-family:fnt4_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Assessment Tasks</span></p>","a":"<p><b>Assessment Tasks</b></p>","r":[],"d":["Assessment Tasks"]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Advanced</span></p><p style=\"text-align:justify;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Assessment tasks are most effective when students are able to utilise them document their learning. At this stage the approach to assessment becomes most significant and the outcome a way to collect an artefact that can be used as point for discussing learning and feedback processes. </span></p><ul><li style=\"line-height:1.275em;padding-top:0.4em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/selecting-assessment-methods\" href=\"https://teaching.unsw.edu.au/selecting-assessment-methods\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Selecting Assessment Methods</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Alternative assessment types</span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Clinical and Lab</span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/assessing-extended-writing\" href=\"https://teaching.unsw.edu.au/assessing-extended-writing\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Extended writing</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Performance based</span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/assessing-portfolio\" href=\"https://teaching.unsw.edu.au/assessing-portfolio\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Portfolios</span></a><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> (Programmatic)</span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Project-based</span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Problem based</span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/assessing-studio-based-learning\" href=\"https://teaching.unsw.edu.au/assessing-studio-based-learning\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Studio-based </span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/work-integrated-learning\" href=\"https://teaching.unsw.edu.au/work-integrated-learning\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Work Integrated Learning</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Other</span></li></ul>","a":"<p><u>Advanced</u></p><p>Assessment tasks are most effective when students are able to utilise them document their learning. At this stage the approach to assessment becomes most significant and the outcome a way to collect an artefact that can be used as point for discussing learning and feedback processes. </p><ul><li><a title=\"https://teaching.unsw.edu.au/selecting-assessment-methods\" href=\"https://teaching.unsw.edu.au/selecting-assessment-methods\" target=\"_blank\"><u>Selecting Assessment Methods</u></a></li><li>Alternative assessment types</li><li>Clinical and Lab</li><li><a title=\"https://teaching.unsw.edu.au/assessing-extended-writing\" href=\"https://teaching.unsw.edu.au/assessing-extended-writing\" target=\"_blank\"><u>Extended writing</u></a></li><li>Performance based</li><li><a title=\"https://teaching.unsw.edu.au/assessing-portfolio\" href=\"https://teaching.unsw.edu.au/assessing-portfolio\" target=\"_blank\"><u>Portfolios</u></a> (Programmatic)</li><li>Project-based</li><li>Problem based</li><li><a title=\"https://teaching.unsw.edu.au/assessing-studio-based-learning\" href=\"https://teaching.unsw.edu.au/assessing-studio-based-learning\" target=\"_blank\"><u>Studio-based </u></a></li><li><a title=\"https://teaching.unsw.edu.au/work-integrated-learning\" href=\"https://teaching.unsw.edu.au/work-integrated-learning\" target=\"_blank\"><u>Work Integrated Learning</u></a></li><li>Other</li></ul>","r":[],"d":["Advanced\nAssessment tasks are most effective when students are able to utilise them document their learning. At this stage the approach to assessment becomes most significant and the outcome a way to collect an artefact that can be used as point for discussing learning and feedback processes. \nSelecting Assessment Methods\nAlternative assessment types\nClinical and Lab\nExtended writing\nPerformance based\nPortfolios (Programmatic)\nProject-based\nProblem based\nStudio-based \nWork Integrated Learning\nOther"]},"tp":"item"},{"i":"53imh7a568al","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:32px;font-family:fnt4_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:32px;font-family:fnt4_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Design and Support</span></p>","a":"<p><b>Design and Support</b></p>","r":[],"d":["Design and Support"]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Advanced</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Support student learning by implementing supporting structures and scaffolds for a diverse range of students. Create opportunities for them to provide feedback on assessment design that might assist their ability to learn and complete the assessment. </span></p><ul><li style=\"line-height:1.275em;padding-top:0.4em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://www.gs.unsw.edu.au/policy/documents/assessmentdesignprocedure.pdf\" href=\"https://www.gs.unsw.edu.au/policy/documents/assessmentdesignprocedure.pdf\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Assessment Design Procedure</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/assessing-inclusively\" href=\"https://teaching.unsw.edu.au/assessing-inclusively\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Assessing inclusively </span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/assessment-responding-cross-cultural-diversity\" href=\"https://teaching.unsw.edu.au/assessment-responding-cross-cultural-diversity\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Cross cultural diversity</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/designing-assessment-learning\" href=\"https://teaching.unsw.edu.au/designing-assessment-learning\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Designing assessment </span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/covid-19-exam-adjustment-guide-online-delivery\" href=\"https://teaching.unsw.edu.au/covid-19-exam-adjustment-guide-online-delivery\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Exam adjustments</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/universal-design-learning-udl\" href=\"https://teaching.unsw.edu.au/universal-design-learning-udl\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Universal Design for Learning</span></a></li></ul><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\">​<span style=\"font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> </span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Hernandez, R. 2012. Does continuous assessment in higher education support student learning?, Higher Education, 64:489-502. </span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">English, M. C. , &amp; Kitsantas, A. (2013). Supporting Student Self-Regulated Learning in Problem- and Project-Based Learning. Interdisciplinary Journal of Problem-Based Learning, 7(2). </span></p>","a":"<p><u>Advanced</u></p><p>Support student learning by implementing supporting structures and scaffolds for a diverse range of students. Create opportunities for them to provide feedback on assessment design that might assist their ability to learn and complete the assessment. </p><ul><li><a title=\"https://www.gs.unsw.edu.au/policy/documents/assessmentdesignprocedure.pdf\" href=\"https://www.gs.unsw.edu.au/policy/documents/assessmentdesignprocedure.pdf\" target=\"_blank\"><u>Assessment Design Procedure</u></a></li><li><a title=\"https://teaching.unsw.edu.au/assessing-inclusively\" href=\"https://teaching.unsw.edu.au/assessing-inclusively\" target=\"_blank\"><u>Assessing inclusively </u></a></li><li><a title=\"https://teaching.unsw.edu.au/assessment-responding-cross-cultural-diversity\" href=\"https://teaching.unsw.edu.au/assessment-responding-cross-cultural-diversity\" target=\"_blank\"><u>Cross cultural diversity</u></a></li><li><a title=\"https://teaching.unsw.edu.au/designing-assessment-learning\" href=\"https://teaching.unsw.edu.au/designing-assessment-learning\" target=\"_blank\"><u>Designing assessment </u></a></li><li><a title=\"https://teaching.unsw.edu.au/covid-19-exam-adjustment-guide-online-delivery\" href=\"https://teaching.unsw.edu.au/covid-19-exam-adjustment-guide-online-delivery\" target=\"_blank\"><u>Exam adjustments</u></a></li><li><a title=\"https://teaching.unsw.edu.au/universal-design-learning-udl\" href=\"https://teaching.unsw.edu.au/universal-design-learning-udl\" target=\"_blank\"><u>Universal Design for Learning</u></a></li></ul><p>​ </p><p>Hernandez, R. 2012. Does continuous assessment in higher education support student learning?, Higher Education, 64:489-502. </p><p>English, M. C. , &amp; Kitsantas, A. (2013). Supporting Student Self-Regulated Learning in Problem- and Project-Based Learning. Interdisciplinary Journal of Problem-Based Learning, 7(2). </p>","r":[],"d":["Advanced\nSupport student learning by implementing supporting structures and scaffolds for a diverse range of students. Create opportunities for them to provide feedback on assessment design that might assist their ability to learn and complete the assessment. \nAssessment Design Procedure\nAssessing inclusively \nCross cultural diversity\nDesigning assessment \nExam adjustments\nUniversal Design for Learning\n \nHernandez, R. 2012. Does continuous assessment in higher education support student learning?, Higher Education, 64:489-502. \nEnglish, M. C. , & Kitsantas, A. (2013). Supporting Student Self-Regulated Learning in Problem- and Project-Based Learning. Interdisciplinary Journal of Problem-Based Learning, 7(2). "]},"tp":"item"},{"i":"ffx56ze2d48y","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:32px;font-family:fnt4_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:32px;font-family:fnt4_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Feedback</span></p>","a":"<p><b>Feedback</b></p>","r":[],"d":["Feedback"]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Advanced</span></p><p style=\"text-align:justify;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Feedback is most useful to students when they are directly involved in understanding the outcomes of quality learning and receive multiple feedback inputs (eg. peers, teachers, external professionals) which provide pathways to future development both within the course and beyond. ​ </span></p><ul><li style=\"line-height:1.275em;padding-top:0.4em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Criteria and </span><a title=\"https://teaching.unsw.edu.au/assessment-rubrics\" href=\"https://teaching.unsw.edu.au/assessment-rubrics\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">rubrics</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Marking guides</span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/peer-assessment\" href=\"https://teaching.unsw.edu.au/peer-assessment\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Peer feedback</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Previous assessment evaluation of success</span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Provide multiple feedback opportunities</span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/self-assessment\" href=\"https://teaching.unsw.edu.au/self-assessment\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Student self-assessment</span></a></li></ul><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;\">​</span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Dawson, Phillip. (2015). Assessment rubrics: towards clearer and more replicable design, research and practice. Assessment &amp; Evaluation in Higher Education. 10.1080/02602938.2015.1111294. </span></p>","a":"<p><u>Advanced</u></p><p>Feedback is most useful to students when they are directly involved in understanding the outcomes of quality learning and receive multiple feedback inputs (eg. peers, teachers, external professionals) which provide pathways to future development both within the course and beyond. ​ </p><ul><li>Criteria and <a title=\"https://teaching.unsw.edu.au/assessment-rubrics\" href=\"https://teaching.unsw.edu.au/assessment-rubrics\" target=\"_blank\"><u>rubrics</u></a></li><li>Marking guides</li><li><a title=\"https://teaching.unsw.edu.au/peer-assessment\" href=\"https://teaching.unsw.edu.au/peer-assessment\" target=\"_blank\"><u>Peer feedback</u></a></li><li>Previous assessment evaluation of success</li><li>Provide multiple feedback opportunities</li><li><a title=\"https://teaching.unsw.edu.au/self-assessment\" href=\"https://teaching.unsw.edu.au/self-assessment\" target=\"_blank\"><u>Student self-assessment</u></a></li></ul><p></p><p>Dawson, Phillip. (2015). Assessment rubrics: towards clearer and more replicable design, research and practice. Assessment &amp; Evaluation in Higher Education. 10.1080/02602938.2015.1111294. </p>","r":[],"d":["Advanced\nFeedback is most useful to students when they are directly involved in understanding the outcomes of quality learning and receive multiple feedback inputs (eg. peers, teachers, external professionals) which provide pathways to future development both within the course and beyond.  \nCriteria and rubrics\nMarking guides\nPeer feedback\nPrevious assessment evaluation of success\nProvide multiple feedback opportunities\nStudent self-assessment\n\nDawson, Phillip. (2015). Assessment rubrics: towards clearer and more replicable design, research and practice. Assessment & Evaluation in Higher Education. 10.1080/02602938.2015.1111294. "]},"tp":"item"},{"i":"a4giu4ik4pi1","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:32px;font-family:fnt4_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:32px;font-family:fnt4_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Evaluate Success</span></p>","a":"<p><b>Evaluate Success</b></p>","r":[],"d":["Evaluate Success"]},"c":{"h":"<p style=\"text-align:justify;line-height:1.5em;padding-top:0.4em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Advanced</span></p><p style=\"text-align:justify;line-height:1.5em;padding-top:0.4em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Develop and collect data from a variety of sources to evaluate the ability of assessment design to support student learning. Utilise students’ perspectives of their experience, student outcomes, colleagues peer review. </span></p><ul><li style=\"line-height:1.275em;padding-top:0.4em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/evaluating-learning-teaching\" href=\"https://teaching.unsw.edu.au/evaluating-learning-teaching\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Evaluating Learning and Teaching</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/reviewing-assessment-quality\" href=\"https://teaching.unsw.edu.au/reviewing-assessment-quality\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Review assessment quality</span></a></li></ul><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;\">​</span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Calvin Smith (2008) Building effectiveness in teaching through targeted evaluation and response: connecting evaluation to teaching improvement in higher education, Assessment &amp; Evaluation in Higher Education, 33:5, 517-533, DOI: 10.1080/02602930701698942 </span></p>","a":"<p><u>Advanced</u></p><p>Develop and collect data from a variety of sources to evaluate the ability of assessment design to support student learning. Utilise students’ perspectives of their experience, student outcomes, colleagues peer review. </p><ul><li><a title=\"https://teaching.unsw.edu.au/evaluating-learning-teaching\" href=\"https://teaching.unsw.edu.au/evaluating-learning-teaching\" target=\"_blank\"><u>Evaluating Learning and Teaching</u></a></li><li><a title=\"https://teaching.unsw.edu.au/reviewing-assessment-quality\" href=\"https://teaching.unsw.edu.au/reviewing-assessment-quality\" target=\"_blank\"><u>Review assessment quality</u></a></li></ul><p></p><p>Calvin Smith (2008) Building effectiveness in teaching through targeted evaluation and response: connecting evaluation to teaching improvement in higher education, Assessment &amp; Evaluation in Higher Education, 33:5, 517-533, DOI: 10.1080/02602930701698942 </p>","r":[],"d":["Advanced\nDevelop and collect data from a variety of sources to evaluate the ability of assessment design to support student learning. Utilise students’ perspectives of their experience, student outcomes, colleagues peer review. \nEvaluating Learning and Teaching\nReview assessment quality\n\nCalvin Smith (2008) Building effectiveness in teaching through targeted evaluation and response: connecting evaluation to teaching improvement in higher education, Assessment & Evaluation in Higher Education, 33:5, 517-533, DOI: 10.1080/02602930701698942 "]},"tp":"item"}],"i":{"i":"gv7nnkymj04i","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:24px;font-family:fnt4_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:24px;font-family:fnt4_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Introduction</span></p>","a":"<p><b>Introduction</b></p>","r":[],"d":["Introduction"]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;\">​</span></p>","a":"<p></p>","r":[],"d":[]},"v":false},"s":{"i":"uc6a85f7o8sm","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:24px;font-family:fnt4_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:24px;font-family:fnt4_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Summary</span></p>","a":"<p><b>Summary</b></p>","r":[],"d":["Summary"]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_31988,fnt1_31988, Arial, Serif, Sans-Serif;\">​</span></p>","a":"<p></p>","r":[],"d":[]},"v":false}},"s":{"t":"Assessment Development Framework","te":true,"nbe":true,"ftw":true,"iw":1440,"ih":1024,"csc":1,"lar":false,"dat":3,"upb":false,"vl":4,"go":"normal"}},"s":{"f":{"t":{"tf":{"f":"fnt4_31988","s":24,"b":false,"i":false},"pf":{"t":"p","lh":1.15,"T":1,"b":0.5}},"nt":{"tf":{"f":"fnt3_31988","s":24,"b":false,"i":false},"pf":{"t":"p","lh":1.15,"T":1,"b":0.5}},"bt":{"tf":{"f":"fnt4_31988","s":24,"b":false,"i":false},"pf":{"t":"p","lh":1.15,"T":1,"b":0.5}}},"p":{"accessibilitySkinCreatedWith":"Created with iSpring evaluation version","backToAppButtonLabel":"Back","contentList":"Content List","emptySearchResult":"No matches found.","enableAccessibilityMode":"Enable screen reader mode","enableNormalMode":"Disable screen reader mode","nextButton":"","prevButton":"","search":"Search"},"c":{"i":"3weqi3xzbh86","n":"Custom preset","s":{"i":{"bg":16250871,"b":14737632,"titc":16777215,"titb":5723991,"ci":true,"tb":16777215,"ttc":12500670,"ttb":11316396,"vit":14145495},"t":{"ti":4737096,"h":4737096,"s":4737096,"t":4737096,"H":5409759},"d":{"bg":16777215,"b":14737632},"ap":{"pb":15987699,"c":4737096,"plb":7368816},"p":{"pb":13554131,"plb":16777215,"bb":5409759,"hbb":4947401,"btc":16777215,"hbtc":16777215}}},"m":{"i":"3hqu89ejd897","n":"Visuals.Common.Editor.ColorScheme.Name.LightBlue","s":{"i":{"bg":16250871,"b":14737632,"titc":16777215,"titb":5723991,"ci":true,"tb":16777215,"ttc":4737096,"ttb":11316396,"vit":14145495},"t":{"ti":4737096,"h":4737096,"s":4737096,"t":4737096,"H":5409759},"d":{"bg":16777215,"b":14737632},"ap":{"pb":15987699,"c":4737096,"plb":7368816},"p":{"pb":13554131,"plb":16777215,"bb":5409759,"hbb":3898324,"btc":16777215,"hbtc":16777215}}}},"ps":"{\n    \"c\" : {\n        \"P\" : {\n            \"e\" : false,\n            \"l\" : false,\n            \"m\" : \"presentationTimeline\",\n            \"v\" : false\n        },\n        \"l\" : false,\n        \"n\" : \"bySteps\",\n        \"o\" : false,\n        \"p\" : false,\n        \"r\" : false,\n        \"s\" : false,\n        \"v\" : true,\n        \"w\" : false,\n        \"x\" : false,\n        \"z\" : true\n    },\n    \"l\" : {\n        \"button.content.normal\" : \"#ffffff\",\n        \"button.content.over\" : \"#ffffff\",\n        \"button.face.normal\" : \"#528bdf\",\n        \"button.face.over\" : \"#4b7dc9\",\n        \"companyLogo.background\" : \"#F3F3F3\",\n        \"hyperlink\" : \"#528BDF\",\n        \"listItem.face.over\" : \"#E1E2E2\",\n        \"listItem.face.pressed\" : \"#9DA2A6\",\n        \"listItem.label.over\" : \"#47484A\",\n        \"listItem.label.pressed\" : \"#FFFFFF\",\n        \"listItem.label.visited\" : \"#727374\",\n        \"page.background\" : \"#ced1d3\",\n        \"panel.background\" : \"#FFFFFF\",\n        \"panel.text\" : \"#47484A\",\n        \"player.background\" : \"#ffffff\",\n        \"popup.background\" : \"#F3F3F3\",\n        \"progress.background\" : \"#F7F7F7\",\n        \"progress.loading\" : \"#D9D9D9\",\n        \"progress.playback\" : \"#528BDF\",\n        \"slide.border\" : \"#e0e0e0\",\n        \"text\" : \"#47484A\"\n    },\n    \"o\" : {\n        \"h\" : true,\n        \"m\" : true,\n        \"n\" : true,\n        \"s\" : true,\n        \"t\" : true\n    },\n    \"s\" : {\n        \"L\" : false,\n        \"l\" : false,\n        \"n\" : false,\n        \"o\" : false,\n        \"p\" : false,\n        \"v\" : false\n    },\n    \"t\" : {\n        \"b\" : [ \"markerTools\", \"attachments\" ],\n        \"bl\" : false,\n        \"c\" : false,\n        \"l\" : false,\n        \"v\" : false\n    }\n}","sb":"C:/Users/z3530984/Desktop/Assessment Framework (Published)/data/interaction_bg_0.png","fp":false,"rs":{"a":{},"v":{},"i":{"C:/Users/z3530984/Desktop/Assessment Framework (Published)/data/interaction_bg_0.png":{"s":"intr1\\images\\interaction_bg_0.png","v":1280,"h":720}}},"fs":{"fnt0_31988":["intr1/fonts/fnt0.woff"],"fnt1_31988":["intr1/fonts/fnt1.woff"],"fnt2_31988":["intr1/fonts/fnt2.woff"],"fnt3_31988":["intr1/fonts/fnt3.woff"],"fnt4_31988":["intr1/fonts/fnt4.woff"]},"S":{"fnt0_31988":{"f":"Open Sans","b":false,"i":false},"fnt1_31988":{"f":"Open Sans","b":false,"i":false},"fnt2_31988":{"f":"Open Sans","b":true,"i":false},"fnt3_31988":{"f":"Segoe UI","b":false,"i":false},"fnt4_31988":{"f":"Segoe UI","b":true,"i":false}},"v":{}}";
	var skinSettings = {};
	loadHandler&&loadHandler(0, 'interactivity_2r3929gjtchi', interactionJson, skinSettings);
	})();