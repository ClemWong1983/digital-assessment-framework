(function(){
	var loadHandler = window['i_{7EAE59BD-C485-439C-9358-3D4A726B14F2}'];
	var interactionJson = "{"d":{"i":"interactivity_wrbxxg49qp7l","C":{"is":[{"i":"c79wep968255","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:24px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:24px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Layer</span></p>","a":"<p><b>Layer</b></p>","r":[],"d":["Layer"]},"co":15440900,"tp":"group","rd":0},{"i":"oztbhb6k8by1","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:32px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:32px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Start here</span></p>","a":"<p><b>Start here</b></p>","r":[],"d":["Start here"]},"c":{"h":"<p style=\"text-align:justify;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">One of the most effective ways to develop ‘assessment literacy’ and practice is by establishing professional communities and forums in which the practice of ‘learning-oriented assessment’ is shared, discussed and evaluated (Carless 2017, 14). By developing widespread deep ‘understanding of pedagogical principles’ the UNSW teaching community can better ‘respond to contextual challenges’ both individually and at scale (Carless 2017, 13). Through this framework academics can engage with resources that highlight the current assessment landscape and offer pathways for assessment development.</span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"color:#f29962;font-size:20px;font-family:fnt2_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Layer 1:</span><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> Quick Start</span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"color:#ed5377;font-size:20px;font-family:fnt2_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Layer 2: </span><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Planning ahead</span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"color:#5754bb;font-size:20px;font-family:fnt2_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Layer 3: </span><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Advanced</span></p>","a":"<p>One of the most effective ways to develop ‘assessment literacy’ and practice is by establishing professional communities and forums in which the practice of ‘learning-oriented assessment’ is shared, discussed and evaluated (Carless 2017, 14). By developing widespread deep ‘understanding of pedagogical principles’ the UNSW teaching community can better ‘respond to contextual challenges’ both individually and at scale (Carless 2017, 13). Through this framework academics can engage with resources that highlight the current assessment landscape and offer pathways for assessment development.</p><p><b>Layer 1:</b> Quick Start</p><p><b>Layer 2: </b>Planning ahead</p><p><b>Layer 3: </b>Advanced</p>","r":[],"d":["One of the most effective ways to develop ‘assessment literacy’ and practice is by establishing professional communities and forums in which the practice of ‘learning-oriented assessment’ is shared, discussed and evaluated (Carless 2017, 14). By developing widespread deep ‘understanding of pedagogical principles’ the UNSW teaching community can better ‘respond to contextual challenges’ both individually and at scale (Carless 2017, 13). Through this framework academics can engage with resources that highlight the current assessment landscape and offer pathways for assessment development.\nLayer 1: Quick Start\nLayer 2: Planning ahead\nLayer 3: Advanced"]},"tp":"item"},{"i":"ttkha8akoy6","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:24px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:24px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Layer</span></p>","a":"<p><b>Layer</b></p>","r":[],"d":["Layer"]},"co":15898978,"tp":"group","rd":0},{"i":"8rsh7fdy8tw","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:32px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:32px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Learning Outcomes</span></p>","a":"<p><b>Learning Outcomes</b></p>","r":[],"d":["Learning Outcomes"]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Quick Start</span></p><p style=\"text-align:justify;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Learning outcomes refer to the knowledge, skills, and attributes that students need to demonstrate of their learning. It is central that they be constructively aligned to course learning outcomes, and enable programme progression.</span></p><ul><li style=\"line-height:1.275em;padding-top:0.4em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/learning-outcomes\" href=\"https://teaching.unsw.edu.au/learning-outcomes\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Writing Learning Outcomes</span></a><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> </span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/aligning-assessment-learning-outcomes\" href=\"https://teaching.unsw.edu.au/aligning-assessment-learning-outcomes\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Align assessments with outcomes</span></a></li></ul><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;\">​</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;\">​</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;\">​</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:28px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:28px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;\">​</span></p>","a":"<p><u>Quick Start</u></p><p>Learning outcomes refer to the knowledge, skills, and attributes that students need to demonstrate of their learning. It is central that they be constructively aligned to course learning outcomes, and enable programme progression.</p><ul><li><a title=\"https://teaching.unsw.edu.au/learning-outcomes\" href=\"https://teaching.unsw.edu.au/learning-outcomes\" target=\"_blank\"><u>Writing Learning Outcomes</u></a> </li><li><a title=\"https://teaching.unsw.edu.au/aligning-assessment-learning-outcomes\" href=\"https://teaching.unsw.edu.au/aligning-assessment-learning-outcomes\" target=\"_blank\"><u>Align assessments with outcomes</u></a></li></ul><p></p><p></p><p></p><p></p>","r":[],"d":["Quick Start\nLearning outcomes refer to the knowledge, skills, and attributes that students need to demonstrate of their learning. It is central that they be constructively aligned to course learning outcomes, and enable programme progression.\nWriting Learning Outcomes \nAlign assessments with outcomes\n\n\n\n"]},"tp":"item"},{"i":"xuzti4ler66b","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:32px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:32px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Approaches to assessment</span></p>","a":"<p><b>Approaches to assessment</b></p>","r":[],"d":["Approaches to assessment"]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Quick Start</span></p><p style=\"text-align:justify;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Approaches to assessment refers to the way in which a teacher assesses student knowledge, skills and behaviour. This includes the purpose and context of the assessment and the way in which the assessment is carried out such as: delivery mode, teaching philosophy and knowledge, skills and attributes being assessed.</span></p><p style=\"text-align:justify;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">This layer typically involves: ​ </span></p><ul><li style=\"line-height:1.275em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Building foundational knowledge, skills and behaviours</span></li></ul><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;\">​</span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;\">​</span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">English, M. C. , &amp; Kitsantas, A. (2013). Supporting Student Self-Regulated Learning in Problem- and Project-Based Learning. Interdisciplinary Journal of Problem-Based Learning, 7(2). </span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Calvin Douglas Smith , Kate Worsfold , Lynda Davies , Ron Fisher &amp; Ruth McPhail (2013) Assessment literacy and student learning: the case for explicitly developing students ‘assessment literacy’, Assessment &amp; Evaluation in Higher Education, 38:1, 44-60, DOI: 10.1080/02602938.2011.598636 </span></p>","a":"<p><u>Quick Start</u></p><p>Approaches to assessment refers to the way in which a teacher assesses student knowledge, skills and behaviour. This includes the purpose and context of the assessment and the way in which the assessment is carried out such as: delivery mode, teaching philosophy and knowledge, skills and attributes being assessed.</p><p>This layer typically involves: ​ </p><ul><li>Building foundational knowledge, skills and behaviours</li></ul><p></p><p></p><p>English, M. C. , &amp; Kitsantas, A. (2013). Supporting Student Self-Regulated Learning in Problem- and Project-Based Learning. Interdisciplinary Journal of Problem-Based Learning, 7(2). </p><p>Calvin Douglas Smith , Kate Worsfold , Lynda Davies , Ron Fisher &amp; Ruth McPhail (2013) Assessment literacy and student learning: the case for explicitly developing students ‘assessment literacy’, Assessment &amp; Evaluation in Higher Education, 38:1, 44-60, DOI: 10.1080/02602938.2011.598636 </p>","r":[],"d":["Quick Start\nApproaches to assessment refers to the way in which a teacher assesses student knowledge, skills and behaviour. This includes the purpose and context of the assessment and the way in which the assessment is carried out such as: delivery mode, teaching philosophy and knowledge, skills and attributes being assessed.\nThis layer typically involves:  \nBuilding foundational knowledge, skills and behaviours\n\n\nEnglish, M. C. , & Kitsantas, A. (2013). Supporting Student Self-Regulated Learning in Problem- and Project-Based Learning. Interdisciplinary Journal of Problem-Based Learning, 7(2). \nCalvin Douglas Smith , Kate Worsfold , Lynda Davies , Ron Fisher & Ruth McPhail (2013) Assessment literacy and student learning: the case for explicitly developing students ‘assessment literacy’, Assessment & Evaluation in Higher Education, 38:1, 44-60, DOI: 10.1080/02602938.2011.598636 "]},"tp":"item"},{"i":"nrp9xog3lki0","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:32px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:32px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Assessment tasks</span></p>","a":"<p><b>Assessment tasks</b></p>","r":[],"d":["Assessment tasks"]},"c":{"h":"<p style=\"text-align:justify;line-height:1.5em;padding-top:0em;padding-bottom:0em;font-size:20px;font-family:fnt4_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt4_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Quick Start</span></p><p style=\"text-align:justify;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Assessment tasks is the activity that the students engages in and produces a product in the course of the assessment. This is significant as it is one of the main ways students understand the nature of assessment. Good assessment practice moves beyond this by asking student to consider the way in which that product is being used to assess their learning (see approaches to assessment). </span></p><ul><li style=\"line-height:1.275em;padding-top:0.4em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/assessing-classroom-participation\" href=\"https://teaching.unsw.edu.au/assessing-classroom-participation\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Class participation</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/assessing-extended-writing\" href=\"https://teaching.unsw.edu.au/assessing-extended-writing\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Essay &amp; reports</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Exams</span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Info-graphic</span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Poster</span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Quiz</span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Other</span></li></ul>","a":"<p><u>Quick Start</u></p><p>Assessment tasks is the activity that the students engages in and produces a product in the course of the assessment. This is significant as it is one of the main ways students understand the nature of assessment. Good assessment practice moves beyond this by asking student to consider the way in which that product is being used to assess their learning (see approaches to assessment). </p><ul><li><a title=\"https://teaching.unsw.edu.au/assessing-classroom-participation\" href=\"https://teaching.unsw.edu.au/assessing-classroom-participation\" target=\"_blank\"><u>Class participation</u></a></li><li><a title=\"https://teaching.unsw.edu.au/assessing-extended-writing\" href=\"https://teaching.unsw.edu.au/assessing-extended-writing\" target=\"_blank\"><u>Essay &amp; reports</u></a></li><li>Exams</li><li>Info-graphic</li><li>Poster</li><li>Quiz</li><li>Other</li></ul>","r":[],"d":["Quick Start\nAssessment tasks is the activity that the students engages in and produces a product in the course of the assessment. This is significant as it is one of the main ways students understand the nature of assessment. Good assessment practice moves beyond this by asking student to consider the way in which that product is being used to assess their learning (see approaches to assessment). \nClass participation\nEssay & reports\nExams\nInfo-graphic\nPoster\nQuiz\nOther"]},"tp":"item"},{"i":"s3cs3pnsyn7j","t":{"h":"<p style=\"line-height:1.15em;padding-top:1em;padding-bottom:0.5em;font-size:32px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:32px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Design and support</span></p>","a":"<p><b>Design and support</b></p>","r":[],"d":["Design and support"]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0em;padding-bottom:0em;font-size:20px;font-family:fnt4_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt4_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Quick Start</span></p><p style=\"text-align:justify;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Design assessment that provides students the necessary support and structure; consider the timing in the learning sequence to allow students to evaluate their learning prior to submitting an assessment product. ​ </span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;\">​</span></p><ul><li style=\"line-height:1.275em;padding-top:0.4em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://www.gs.unsw.edu.au/policy/documents/assessmentdesignprocedure.pdf\" href=\"https://www.gs.unsw.edu.au/policy/documents/assessmentdesignprocedure.pdf\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Assessment Design Procedure</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/covid-19-exam-adjustment-guide-online-delivery\" href=\"https://teaching.unsw.edu.au/covid-19-exam-adjustment-guide-online-delivery\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Exam adjustments</span></a></li></ul><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;\">​</span></p><p style=\"text-align:justify;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;\">​</span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Hernandez, R. 2012. Does continuous assessment in higher education support student learning?, Higher Education, 64:489-502. </span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">English, M. C. , &amp; Kitsantas, A. (2013). Supporting Student Self-Regulated Learning in Problem- and Project-Based Learning. Interdisciplinary Journal of Problem-Based Learning, 7(2). </span></p>","a":"<p><u>Quick Start</u></p><p>Design assessment that provides students the necessary support and structure; consider the timing in the learning sequence to allow students to evaluate their learning prior to submitting an assessment product. ​ </p><p></p><ul><li><a title=\"https://www.gs.unsw.edu.au/policy/documents/assessmentdesignprocedure.pdf\" href=\"https://www.gs.unsw.edu.au/policy/documents/assessmentdesignprocedure.pdf\" target=\"_blank\"><u>Assessment Design Procedure</u></a></li><li><a title=\"https://teaching.unsw.edu.au/covid-19-exam-adjustment-guide-online-delivery\" href=\"https://teaching.unsw.edu.au/covid-19-exam-adjustment-guide-online-delivery\" target=\"_blank\"><u>Exam adjustments</u></a></li></ul><p></p><p></p><p>Hernandez, R. 2012. Does continuous assessment in higher education support student learning?, Higher Education, 64:489-502. </p><p>English, M. C. , &amp; Kitsantas, A. (2013). Supporting Student Self-Regulated Learning in Problem- and Project-Based Learning. Interdisciplinary Journal of Problem-Based Learning, 7(2). </p>","r":[],"d":["Quick Start\nDesign assessment that provides students the necessary support and structure; consider the timing in the learning sequence to allow students to evaluate their learning prior to submitting an assessment product.  \n\nAssessment Design Procedure\nExam adjustments\n\n\nHernandez, R. 2012. Does continuous assessment in higher education support student learning?, Higher Education, 64:489-502. \nEnglish, M. C. , & Kitsantas, A. (2013). Supporting Student Self-Regulated Learning in Problem- and Project-Based Learning. Interdisciplinary Journal of Problem-Based Learning, 7(2). "]},"tp":"item"},{"i":"8s3hxvmeq7ym","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:32px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:32px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Feedback</span></p>","a":"<p><b>Feedback</b></p>","r":[],"d":["Feedback"]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0em;padding-bottom:0em;font-size:20px;font-family:fnt4_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt4_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Quick Start</span></p><p style=\"text-align:justify;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Feedback processes refers to the way in which students develop understanding of how to improve the quality of their work. While traditionally, feedback has been seen through the lens of giving students information that justifies their grade, feedback is best for student learning when it focuses on the step that can be taken to improve student outcomes. ​ </span></p><ul><li style=\"line-height:1.275em;padding-top:0.4em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Direct feedback of student work</span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Specific and actionable feedback</span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/assessing-qualitative-differences-student-work\" href=\"https://teaching.unsw.edu.au/assessing-qualitative-differences-student-work\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">SOLO Taxonomy for assessing differences in student work</span></a></li></ul><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;\">​</span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Dawson, Phillip. (2015). Assessment rubrics: towards clearer and more replicable design, research and practice. Assessment &amp; Evaluation in Higher Education. 10.1080/02602938.2015.1111294. </span></p>","a":"<p><u>Quick Start</u></p><p>Feedback processes refers to the way in which students develop understanding of how to improve the quality of their work. While traditionally, feedback has been seen through the lens of giving students information that justifies their grade, feedback is best for student learning when it focuses on the step that can be taken to improve student outcomes. ​ </p><ul><li>Direct feedback of student work</li><li>Specific and actionable feedback</li><li><a title=\"https://teaching.unsw.edu.au/assessing-qualitative-differences-student-work\" href=\"https://teaching.unsw.edu.au/assessing-qualitative-differences-student-work\" target=\"_blank\"><u>SOLO Taxonomy for assessing differences in student work</u></a></li></ul><p></p><p>Dawson, Phillip. (2015). Assessment rubrics: towards clearer and more replicable design, research and practice. Assessment &amp; Evaluation in Higher Education. 10.1080/02602938.2015.1111294. </p>","r":[],"d":["Quick Start\nFeedback processes refers to the way in which students develop understanding of how to improve the quality of their work. While traditionally, feedback has been seen through the lens of giving students information that justifies their grade, feedback is best for student learning when it focuses on the step that can be taken to improve student outcomes.  \nDirect feedback of student work\nSpecific and actionable feedback\nSOLO Taxonomy for assessing differences in student work\n\nDawson, Phillip. (2015). Assessment rubrics: towards clearer and more replicable design, research and practice. Assessment & Evaluation in Higher Education. 10.1080/02602938.2015.1111294. "]},"tp":"item"},{"i":"8fagzpj4ghqa","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:32px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:32px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Evaluate success</span></p>","a":"<p><b>Evaluate success</b></p>","r":[],"d":["Evaluate success"]},"c":{"h":"<p style=\"text-align:justify;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Quick Start</span></p><p style=\"text-align:justify;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Utilise the student evaluation system to determine what changes need to be made to the assessment to support student learning. </span></p><ul><li style=\"text-align:justify;line-height:1.275em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/reviewing-assessment-quality\" href=\"https://teaching.unsw.edu.au/reviewing-assessment-quality\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Review assessment quality</span></a></li></ul><p style=\"text-align:justify;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;\">​</span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Calvin Smith (2008) Building effectiveness in teaching through targeted evaluation and response: connecting evaluation to teaching improvement in higher education, Assessment &amp; Evaluation in Higher Education, 33:5, 517-533, DOI: 10.1080/02602930701698942 </span></p>","a":"<p><u>Quick Start</u></p><p>Utilise the student evaluation system to determine what changes need to be made to the assessment to support student learning. </p><ul><li><a title=\"https://teaching.unsw.edu.au/reviewing-assessment-quality\" href=\"https://teaching.unsw.edu.au/reviewing-assessment-quality\" target=\"_blank\"><u>Review assessment quality</u></a></li></ul><p></p><p>Calvin Smith (2008) Building effectiveness in teaching through targeted evaluation and response: connecting evaluation to teaching improvement in higher education, Assessment &amp; Evaluation in Higher Education, 33:5, 517-533, DOI: 10.1080/02602930701698942 </p>","r":[],"d":["Quick Start\nUtilise the student evaluation system to determine what changes need to be made to the assessment to support student learning. \nReview assessment quality\n\nCalvin Smith (2008) Building effectiveness in teaching through targeted evaluation and response: connecting evaluation to teaching improvement in higher education, Assessment & Evaluation in Higher Education, 33:5, 517-533, DOI: 10.1080/02602930701698942 "]},"tp":"item"},{"i":"71zckwiadxpg","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:24px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:24px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Layer</span></p>","a":"<p><b>Layer</b></p>","r":[],"d":["Layer"]},"co":15898978,"tp":"group","rd":0},{"i":"dx4xro1wl0pb","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:32px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:32px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Quick Start</span></p>","a":"<p><b>Quick Start</b></p>","r":[],"d":["Quick Start"]},"c":{"h":"<p style=\"text-align:justify;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Changes to educational contexts sometimes require rapid adaptation of assessment. Based on the work of leading assessment scholars Kay Sambell and Sally Brown (2020). This level of assessment design focuses on adapting assessment quickly to alternative digital formats, while promoting the incorporation of useful assessment concepts into existing teaching practice that can form the basis of further development following evaluation.</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;\">​</span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Adapted for the UNSW context from Bearman, M., Dawson, P., Boud, D., Hall, M., Bennett, S., Molloy, E., &amp; Joughin, G., (2014), Guide to the Assessment Design Decisions Framework, </span><a title=\"http://www.assessmentdecisions.org/guide\" href=\"http://www.assessmentdecisions.org/guide\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">http://www.assessmentdecisions.org/guide</span></a><span style=\"font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> ​ </span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Sambell, K. Brown, S. (2020) The changing landscape of assessment: some possible replacements for unseen, time-constrained, face-to-face invigilated exams</span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Sambell, K. Brown, S. (2020) Paper for post-Covid19 SEDA Educational Developments Special issue Changing assessment for good: a major opportunity for educational developers</span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Sambell, K. Brown, S. (2020) Contingency planning: exploring rapid alternatives to face-to-face assessment</span><span style=\"font-size:14px;font-family:fnt2_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> </span><a title=\"https://sally-brown.net/kay-sambell-and-sally-brown-covid-19-assessment-collection\" href=\"https://sally-brown.net/kay-sambell-and-sally-brown-covid-19-assessment-collection\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">https://sally-brown.net/kay-sambell-and-sally-brown-covid-19-assessment-collection</span></a></p>","a":"<p>Changes to educational contexts sometimes require rapid adaptation of assessment. Based on the work of leading assessment scholars Kay Sambell and Sally Brown (2020). This level of assessment design focuses on adapting assessment quickly to alternative digital formats, while promoting the incorporation of useful assessment concepts into existing teaching practice that can form the basis of further development following evaluation.</p><p></p><p>Adapted for the UNSW context from Bearman, M., Dawson, P., Boud, D., Hall, M., Bennett, S., Molloy, E., &amp; Joughin, G., (2014), Guide to the Assessment Design Decisions Framework, <a title=\"http://www.assessmentdecisions.org/guide\" href=\"http://www.assessmentdecisions.org/guide\" target=\"_blank\"><u>http://www.assessmentdecisions.org/guide</u></a> ​ </p><p>Sambell, K. Brown, S. (2020) The changing landscape of assessment: some possible replacements for unseen, time-constrained, face-to-face invigilated exams</p><p>Sambell, K. Brown, S. (2020) Paper for post-Covid19 SEDA Educational Developments Special issue Changing assessment for good: a major opportunity for educational developers</p><p>Sambell, K. Brown, S. (2020) Contingency planning: exploring rapid alternatives to face-to-face assessment<b> </b><a title=\"https://sally-brown.net/kay-sambell-and-sally-brown-covid-19-assessment-collection\" href=\"https://sally-brown.net/kay-sambell-and-sally-brown-covid-19-assessment-collection\" target=\"_blank\"><u>https://sally-brown.net/kay-sambell-and-sally-brown-covid-19-assessment-collection</u></a></p>","r":[],"d":["Changes to educational contexts sometimes require rapid adaptation of assessment. Based on the work of leading assessment scholars Kay Sambell and Sally Brown (2020). This level of assessment design focuses on adapting assessment quickly to alternative digital formats, while promoting the incorporation of useful assessment concepts into existing teaching practice that can form the basis of further development following evaluation.\n\nAdapted for the UNSW context from Bearman, M., Dawson, P., Boud, D., Hall, M., Bennett, S., Molloy, E., & Joughin, G., (2014), Guide to the Assessment Design Decisions Framework, http://www.assessmentdecisions.org/guide  \nSambell, K. Brown, S. (2020) The changing landscape of assessment: some possible replacements for unseen, time-constrained, face-to-face invigilated exams\nSambell, K. Brown, S. (2020) Paper for post-Covid19 SEDA Educational Developments Special issue Changing assessment for good: a major opportunity for educational developers\nSambell, K. Brown, S. (2020) Contingency planning: exploring rapid alternatives to face-to-face assessment https://sally-brown.net/kay-sambell-and-sally-brown-covid-19-assessment-collection"]},"tp":"item"},{"i":"x5i49xce057f","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:24px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:24px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Layer</span></p>","a":"<p><b>Layer</b></p>","r":[],"d":["Layer"]},"co":13986179,"tp":"group","rd":0},{"i":"i6dg1bb6k6w7","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:32px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:32px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Learning Outcomes</span></p>","a":"<p><b>Learning Outcomes</b></p>","r":[],"d":["Learning Outcomes"]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Planning Ahead</span></p><p style=\"text-align:justify;line-height:2em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">The learning outcomes set should incorporate programme goals and graduate attributes in order to align more effectively to the sequence of learning in building relevant skills, knowledge and attributes</span><span style=\"font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">. </span></p><ul><li style=\"line-height:1.275em;padding-top:0.4em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/sites/default/files/upload-files/UNSW%20Learning%20Outcomes%20Guide.pdf\" href=\"https://teaching.unsw.edu.au/sites/default/files/upload-files/UNSW%20Learning%20Outcomes%20Guide.pdf\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">UNSW Learning Outcomes guide</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/curriculum-mapping\" href=\"https://teaching.unsw.edu.au/curriculum-mapping\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Curriculum alignment and mapping</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/integrated-curriculum-framework\" href=\"https://teaching.unsw.edu.au/integrated-curriculum-framework\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Integrated Curriculum Framework</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/learning-outcomes\" href=\"https://teaching.unsw.edu.au/learning-outcomes\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Learning Outcomes</span></a><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> (Refer to higher level thinking)</span></li></ul><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;\">​</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:18px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:18px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;\">​</span></p>","a":"<p><u>Planning Ahead</u></p><p>The learning outcomes set should incorporate programme goals and graduate attributes in order to align more effectively to the sequence of learning in building relevant skills, knowledge and attributes. </p><ul><li><a title=\"https://teaching.unsw.edu.au/sites/default/files/upload-files/UNSW%20Learning%20Outcomes%20Guide.pdf\" href=\"https://teaching.unsw.edu.au/sites/default/files/upload-files/UNSW%20Learning%20Outcomes%20Guide.pdf\" target=\"_blank\"><u>UNSW Learning Outcomes guide</u></a></li><li><a title=\"https://teaching.unsw.edu.au/curriculum-mapping\" href=\"https://teaching.unsw.edu.au/curriculum-mapping\" target=\"_blank\"><u>Curriculum alignment and mapping</u></a></li><li><a title=\"https://teaching.unsw.edu.au/integrated-curriculum-framework\" href=\"https://teaching.unsw.edu.au/integrated-curriculum-framework\" target=\"_blank\"><u>Integrated Curriculum Framework</u></a></li><li><a title=\"https://teaching.unsw.edu.au/learning-outcomes\" href=\"https://teaching.unsw.edu.au/learning-outcomes\" target=\"_blank\"><u>Learning Outcomes</u></a> (Refer to higher level thinking)</li></ul><p></p><p></p>","r":[],"d":["Planning Ahead\nThe learning outcomes set should incorporate programme goals and graduate attributes in order to align more effectively to the sequence of learning in building relevant skills, knowledge and attributes. \nUNSW Learning Outcomes guide\nCurriculum alignment and mapping\nIntegrated Curriculum Framework\nLearning Outcomes (Refer to higher level thinking)\n\n"]},"tp":"item"},{"i":"vdz6shppxql5","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:32px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:32px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Approaches to assessment</span></p>","a":"<p><b>Approaches to assessment</b></p>","r":[],"d":["Approaches to assessment"]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0em;padding-bottom:0em;font-size:20px;font-family:fnt4_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt4_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Planning Ahead</span></p><p style=\"text-align:justify;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Ways of conducting assessment can be leveraged as the basis design for designing assessments that focus on student learning, looking at not just product but incorporating the process of student learning in the task set. </span></p><p style=\"text-align:justify;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">This layer typically involves: ​ </span></p><ul><li style=\"line-height:1.275em;padding-top:0.4em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Assessment to drive learning</span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Student collaboration </span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Challenging learners for higher order thinking</span></li></ul><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;\">​</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;\">​</span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;\">​</span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">English, M. C. , &amp; Kitsantas, A. (2013). Supporting Student Self-Regulated Learning in Problem- and Project-Based Learning. Interdisciplinary Journal of Problem-Based Learning, 7(2). </span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Calvin Douglas Smith , Kate Worsfold , Lynda Davies , Ron Fisher &amp; Ruth McPhail (2013) Assessment literacy and student learning: the case for explicitly developing students ‘assessment literacy’, Assessment &amp; Evaluation in Higher Education, 38:1, 44-60, DOI: 10.1080/02602938.2011.598636 </span></p>","a":"<p><u>Planning Ahead</u></p><p>Ways of conducting assessment can be leveraged as the basis design for designing assessments that focus on student learning, looking at not just product but incorporating the process of student learning in the task set. </p><p>This layer typically involves: ​ </p><ul><li>Assessment to drive learning</li><li>Student collaboration </li><li>Challenging learners for higher order thinking</li></ul><p></p><p></p><p></p><p>English, M. C. , &amp; Kitsantas, A. (2013). Supporting Student Self-Regulated Learning in Problem- and Project-Based Learning. Interdisciplinary Journal of Problem-Based Learning, 7(2). </p><p>Calvin Douglas Smith , Kate Worsfold , Lynda Davies , Ron Fisher &amp; Ruth McPhail (2013) Assessment literacy and student learning: the case for explicitly developing students ‘assessment literacy’, Assessment &amp; Evaluation in Higher Education, 38:1, 44-60, DOI: 10.1080/02602938.2011.598636 </p>","r":[],"d":["Planning Ahead\nWays of conducting assessment can be leveraged as the basis design for designing assessments that focus on student learning, looking at not just product but incorporating the process of student learning in the task set. \nThis layer typically involves:  \nAssessment to drive learning\nStudent collaboration \nChallenging learners for higher order thinking\n\n\n\nEnglish, M. C. , & Kitsantas, A. (2013). Supporting Student Self-Regulated Learning in Problem- and Project-Based Learning. Interdisciplinary Journal of Problem-Based Learning, 7(2). \nCalvin Douglas Smith , Kate Worsfold , Lynda Davies , Ron Fisher & Ruth McPhail (2013) Assessment literacy and student learning: the case for explicitly developing students ‘assessment literacy’, Assessment & Evaluation in Higher Education, 38:1, 44-60, DOI: 10.1080/02602938.2011.598636 "]},"tp":"item"},{"i":"3wdooomljl7w","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:32px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:32px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Assessment tasks</span></p>","a":"<p><b>Assessment tasks</b></p>","r":[],"d":["Assessment tasks"]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0em;padding-bottom:0em;font-size:20px;font-family:fnt4_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt4_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Planning Ahead</span></p><p style=\"text-align:justify;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Assessment tasks can be used in ways beyond their traditional assessment types. They can also be combined to make for more diverse or authentic assessment experiences. ​ </span></p><ul><li style=\"line-height:1.275em;padding-top:0.4em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/selecting-assessment-methods\" href=\"https://teaching.unsw.edu.au/selecting-assessment-methods\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Selecting Assessment Methods</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Alternative assessment types</span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/assessment-case-studies-and-scenarios\" href=\"https://teaching.unsw.edu.au/assessment-case-studies-and-scenarios\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Case studies and scenario-based</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/assessing-laboratory-learning\" href=\"https://teaching.unsw.edu.au/assessing-laboratory-learning\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Clinical and Lab</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/assessing-extended-writing\" href=\"https://teaching.unsw.edu.au/assessing-extended-writing\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Extended writing</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/oral-presentations\" href=\"https://teaching.unsw.edu.au/oral-presentations\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Oral presentations</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Performance based</span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/assessing-portfolio\" href=\"https://teaching.unsw.edu.au/assessing-portfolio\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Portfolios</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/assessing-role-play-and-simulation\" href=\"https://teaching.unsw.edu.au/assessing-role-play-and-simulation\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Role play and Simulation</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Other</span></li></ul>","a":"<p><u>Planning Ahead</u></p><p>Assessment tasks can be used in ways beyond their traditional assessment types. They can also be combined to make for more diverse or authentic assessment experiences. ​ </p><ul><li><a title=\"https://teaching.unsw.edu.au/selecting-assessment-methods\" href=\"https://teaching.unsw.edu.au/selecting-assessment-methods\" target=\"_blank\"><u>Selecting Assessment Methods</u></a></li><li>Alternative assessment types</li><li><a title=\"https://teaching.unsw.edu.au/assessment-case-studies-and-scenarios\" href=\"https://teaching.unsw.edu.au/assessment-case-studies-and-scenarios\" target=\"_blank\"><u>Case studies and scenario-based</u></a></li><li><a title=\"https://teaching.unsw.edu.au/assessing-laboratory-learning\" href=\"https://teaching.unsw.edu.au/assessing-laboratory-learning\" target=\"_blank\"><u>Clinical and Lab</u></a></li><li><a title=\"https://teaching.unsw.edu.au/assessing-extended-writing\" href=\"https://teaching.unsw.edu.au/assessing-extended-writing\" target=\"_blank\"><u>Extended writing</u></a></li><li><a title=\"https://teaching.unsw.edu.au/oral-presentations\" href=\"https://teaching.unsw.edu.au/oral-presentations\" target=\"_blank\"><u>Oral presentations</u></a></li><li>Performance based</li><li><a title=\"https://teaching.unsw.edu.au/assessing-portfolio\" href=\"https://teaching.unsw.edu.au/assessing-portfolio\" target=\"_blank\"><u>Portfolios</u></a></li><li><a title=\"https://teaching.unsw.edu.au/assessing-role-play-and-simulation\" href=\"https://teaching.unsw.edu.au/assessing-role-play-and-simulation\" target=\"_blank\"><u>Role play and Simulation</u></a></li><li>Other</li></ul>","r":[],"d":["Planning Ahead\nAssessment tasks can be used in ways beyond their traditional assessment types. They can also be combined to make for more diverse or authentic assessment experiences.  \nSelecting Assessment Methods\nAlternative assessment types\nCase studies and scenario-based\nClinical and Lab\nExtended writing\nOral presentations\nPerformance based\nPortfolios\nRole play and Simulation\nOther"]},"tp":"item"},{"i":"3zzezoddirh0","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:32px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:32px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Design and support</span></p>","a":"<p><b>Design and support</b></p>","r":[],"d":["Design and support"]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0em;padding-bottom:0em;font-size:20px;font-family:fnt4_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt4_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Planning Ahead</span></p><p style=\"text-align:justify;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Support students learning by providing opportunities for dialogue about the assessment prior to its submission. Actively engage students in assessing whether they have the tools to be able to complete the task and whether they understand how they will be assessed. </span></p><ul><li style=\"line-height:1.275em;padding-top:0.4em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://www.gs.unsw.edu.au/policy/documents/assessmentdesignprocedure.pdf\" href=\"https://www.gs.unsw.edu.au/policy/documents/assessmentdesignprocedure.pdf\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Assessment Design Procedure</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/assessing-inclusively\" href=\"https://teaching.unsw.edu.au/assessing-inclusively\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Assessing inclusively </span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/covid-19-exam-adjustment-guide-online-delivery\" href=\"https://teaching.unsw.edu.au/covid-19-exam-adjustment-guide-online-delivery\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Exam adjustments</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/standards-based-assessment\" href=\"https://teaching.unsw.edu.au/standards-based-assessment\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Standards-Based Assessment</span></a></li></ul><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;\">​</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;\">​</span></p><p style=\"text-align:justify;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\">​<span style=\"font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> </span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Hernandez, R. 2012. Does continuous assessment in higher education support student learning?, Higher Education, 64:489-502. </span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">English, M. C. , &amp; Kitsantas, A. (2013). Supporting Student Self-Regulated Learning in Problem- and Project-Based Learning. Interdisciplinary Journal of Problem-Based Learning, 7(2). </span></p>","a":"<p><u>Planning Ahead</u></p><p>Support students learning by providing opportunities for dialogue about the assessment prior to its submission. Actively engage students in assessing whether they have the tools to be able to complete the task and whether they understand how they will be assessed. </p><ul><li><a title=\"https://www.gs.unsw.edu.au/policy/documents/assessmentdesignprocedure.pdf\" href=\"https://www.gs.unsw.edu.au/policy/documents/assessmentdesignprocedure.pdf\" target=\"_blank\"><u>Assessment Design Procedure</u></a></li><li><a title=\"https://teaching.unsw.edu.au/assessing-inclusively\" href=\"https://teaching.unsw.edu.au/assessing-inclusively\" target=\"_blank\"><u>Assessing inclusively </u></a></li><li><a title=\"https://teaching.unsw.edu.au/covid-19-exam-adjustment-guide-online-delivery\" href=\"https://teaching.unsw.edu.au/covid-19-exam-adjustment-guide-online-delivery\" target=\"_blank\"><u>Exam adjustments</u></a></li><li><a title=\"https://teaching.unsw.edu.au/standards-based-assessment\" href=\"https://teaching.unsw.edu.au/standards-based-assessment\" target=\"_blank\"><u>Standards-Based Assessment</u></a></li></ul><p></p><p></p><p>​ </p><p>Hernandez, R. 2012. Does continuous assessment in higher education support student learning?, Higher Education, 64:489-502. </p><p>English, M. C. , &amp; Kitsantas, A. (2013). Supporting Student Self-Regulated Learning in Problem- and Project-Based Learning. Interdisciplinary Journal of Problem-Based Learning, 7(2). </p>","r":[],"d":["Planning Ahead\nSupport students learning by providing opportunities for dialogue about the assessment prior to its submission. Actively engage students in assessing whether they have the tools to be able to complete the task and whether they understand how they will be assessed. \nAssessment Design Procedure\nAssessing inclusively \nExam adjustments\nStandards-Based Assessment\n\n\n \nHernandez, R. 2012. Does continuous assessment in higher education support student learning?, Higher Education, 64:489-502. \nEnglish, M. C. , & Kitsantas, A. (2013). Supporting Student Self-Regulated Learning in Problem- and Project-Based Learning. Interdisciplinary Journal of Problem-Based Learning, 7(2). "]},"tp":"item"},{"i":"1ofv2n30l0m8","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:32px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:32px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Feedback</span></p>","a":"<p><b>Feedback</b></p>","r":[],"d":["Feedback"]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Planning Ahead</span></p><p style=\"text-align:justify;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Student learning through feedback can be promoted by involving students in understanding quality or standards through structured feedback mechanisms such as rubrics, marking guides, dialogue about quality, and regular and consistent points of feedback. Opportunities for students to use this feedback to improve on their learning is also useful.</span></p><ul><li style=\"line-height:1.275em;padding-top:0.4em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/assessment-feedback\" href=\"https://teaching.unsw.edu.au/assessment-feedback\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Constructive, timely and meaningful feedback</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Criteria and </span><a title=\"https://teaching.unsw.edu.au/assessment-rubrics\" href=\"https://teaching.unsw.edu.au/assessment-rubrics\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">rubrics</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Marking guides</span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/peer-assessment\" href=\"https://teaching.unsw.edu.au/peer-assessment\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Peer feedback</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Previous assessment evaluation of success</span></li></ul><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;\">​</span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Dawson, Phillip. (2015). Assessment rubrics: towards clearer and more replicable design, research and practice. Assessment &amp; Evaluation in Higher Education. 10.1080/02602938.2015.1111294. </span></p>","a":"<p><u>Planning Ahead</u></p><p>Student learning through feedback can be promoted by involving students in understanding quality or standards through structured feedback mechanisms such as rubrics, marking guides, dialogue about quality, and regular and consistent points of feedback. Opportunities for students to use this feedback to improve on their learning is also useful.</p><ul><li><a title=\"https://teaching.unsw.edu.au/assessment-feedback\" href=\"https://teaching.unsw.edu.au/assessment-feedback\" target=\"_blank\"><u>Constructive, timely and meaningful feedback</u></a></li><li>Criteria and <a title=\"https://teaching.unsw.edu.au/assessment-rubrics\" href=\"https://teaching.unsw.edu.au/assessment-rubrics\" target=\"_blank\"><u>rubrics</u></a></li><li>Marking guides</li><li><a title=\"https://teaching.unsw.edu.au/peer-assessment\" href=\"https://teaching.unsw.edu.au/peer-assessment\" target=\"_blank\"><u>Peer feedback</u></a></li><li>Previous assessment evaluation of success</li></ul><p></p><p>Dawson, Phillip. (2015). Assessment rubrics: towards clearer and more replicable design, research and practice. Assessment &amp; Evaluation in Higher Education. 10.1080/02602938.2015.1111294. </p>","r":[],"d":["Planning Ahead\nStudent learning through feedback can be promoted by involving students in understanding quality or standards through structured feedback mechanisms such as rubrics, marking guides, dialogue about quality, and regular and consistent points of feedback. Opportunities for students to use this feedback to improve on their learning is also useful.\nConstructive, timely and meaningful feedback\nCriteria and rubrics\nMarking guides\nPeer feedback\nPrevious assessment evaluation of success\n\nDawson, Phillip. (2015). Assessment rubrics: towards clearer and more replicable design, research and practice. Assessment & Evaluation in Higher Education. 10.1080/02602938.2015.1111294. "]},"tp":"item"},{"i":"nto5cna1zwux","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:32px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:32px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Evaluate success</span></p>","a":"<p><b>Evaluate success</b></p>","r":[],"d":["Evaluate success"]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Planning Ahead</span></p><p style=\"text-align:justify;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Engage in community of practice and development programmes with colleagues to evaluate assessment practices and upskill. Observe trends over consecutive iterations of the course to determine reoccurring student assessment literacy issues. </span></p><ul><li style=\"line-height:1.275em;padding-top:0.4em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/evaluating-learning-teaching\" href=\"https://teaching.unsw.edu.au/evaluating-learning-teaching\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Evaluating Learning and Teaching</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/reviewing-assessment-quality\" href=\"https://teaching.unsw.edu.au/reviewing-assessment-quality\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Review assessment quality</span></a></li></ul><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;\">​</span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Calvin Smith (2008) Building effectiveness in teaching through targeted evaluation and response: connecting evaluation to teaching improvement in higher education, Assessment &amp; Evaluation in Higher Education, 33:5, 517-533, DOI: 10.1080/02602930701698942 </span></p>","a":"<p><u>Planning Ahead</u></p><p>Engage in community of practice and development programmes with colleagues to evaluate assessment practices and upskill. Observe trends over consecutive iterations of the course to determine reoccurring student assessment literacy issues. </p><ul><li><a title=\"https://teaching.unsw.edu.au/evaluating-learning-teaching\" href=\"https://teaching.unsw.edu.au/evaluating-learning-teaching\" target=\"_blank\"><u>Evaluating Learning and Teaching</u></a></li><li><a title=\"https://teaching.unsw.edu.au/reviewing-assessment-quality\" href=\"https://teaching.unsw.edu.au/reviewing-assessment-quality\" target=\"_blank\"><u>Review assessment quality</u></a></li></ul><p></p><p>Calvin Smith (2008) Building effectiveness in teaching through targeted evaluation and response: connecting evaluation to teaching improvement in higher education, Assessment &amp; Evaluation in Higher Education, 33:5, 517-533, DOI: 10.1080/02602930701698942 </p>","r":[],"d":["Planning Ahead\nEngage in community of practice and development programmes with colleagues to evaluate assessment practices and upskill. Observe trends over consecutive iterations of the course to determine reoccurring student assessment literacy issues. \nEvaluating Learning and Teaching\nReview assessment quality\n\nCalvin Smith (2008) Building effectiveness in teaching through targeted evaluation and response: connecting evaluation to teaching improvement in higher education, Assessment & Evaluation in Higher Education, 33:5, 517-533, DOI: 10.1080/02602930701698942 "]},"tp":"item"},{"i":"bygdvqt6jupj","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:24px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:24px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Layer</span></p>","a":"<p><b>Layer</b></p>","r":[],"d":["Layer"]},"co":13986179,"tp":"group","rd":0},{"i":"he7n2wf32l6a","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:32px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:32px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Planning Ahead</span></p>","a":"<p><b>Planning Ahead</b></p>","r":[],"d":["Planning Ahead"]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Planning ahead involves gathering student data about learning and developing deeper assessment approaches to support, enhance and extend student learning. Providing richer feedback is a key characteristic to develop student learning and achievement of learning outcomes. ​ </span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:18px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:18px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;\">​</span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Adapted for the UNSW context from Bearman, M., Dawson, P., Boud, D., Hall, M., Bennett, S., Molloy, E., &amp; Joughin, G., (2014), Guide to the Assessment Design Decisions Framework, </span><a title=\"http://www.assessmentdecisions.org/guide\" href=\"http://www.assessmentdecisions.org/guide\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">http://www.assessmentdecisions.org/guide</span></a><span style=\"font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> ​ </span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Sambell, K. Brown, S. (2020) The changing landscape of assessment: some possible replacements for unseen, time-constrained, face-to-face invigilated exams</span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Sambell, K. Brown, S. (2020) Paper for post-Covid19 SEDA Educational Developments Special issue Changing assessment for good: a major opportunity for educational developers</span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Sambell, K. Brown, S. (2020) Contingency planning: exploring rapid alternatives to face-to-face assessment </span><a title=\"https://sally-brown.net/kay-sambell-and-sally-brown-covid-19-assessment-collection/\" href=\"https://sally-brown.net/kay-sambell-and-sally-brown-covid-19-assessment-collection/\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">https://sally-brown.net/kay-sambell-and-sally-brown-covid-19-assessment-collection/</span></a></p>","a":"<p>Planning ahead involves gathering student data about learning and developing deeper assessment approaches to support, enhance and extend student learning. Providing richer feedback is a key characteristic to develop student learning and achievement of learning outcomes. ​ </p><p></p><p>Adapted for the UNSW context from Bearman, M., Dawson, P., Boud, D., Hall, M., Bennett, S., Molloy, E., &amp; Joughin, G., (2014), Guide to the Assessment Design Decisions Framework, <a title=\"http://www.assessmentdecisions.org/guide\" href=\"http://www.assessmentdecisions.org/guide\" target=\"_blank\"><u>http://www.assessmentdecisions.org/guide</u></a> ​ </p><p>Sambell, K. Brown, S. (2020) The changing landscape of assessment: some possible replacements for unseen, time-constrained, face-to-face invigilated exams</p><p>Sambell, K. Brown, S. (2020) Paper for post-Covid19 SEDA Educational Developments Special issue Changing assessment for good: a major opportunity for educational developers</p><p>Sambell, K. Brown, S. (2020) Contingency planning: exploring rapid alternatives to face-to-face assessment <a title=\"https://sally-brown.net/kay-sambell-and-sally-brown-covid-19-assessment-collection/\" href=\"https://sally-brown.net/kay-sambell-and-sally-brown-covid-19-assessment-collection/\" target=\"_blank\"><u>https://sally-brown.net/kay-sambell-and-sally-brown-covid-19-assessment-collection/</u></a></p>","r":[],"d":["Planning ahead involves gathering student data about learning and developing deeper assessment approaches to support, enhance and extend student learning. Providing richer feedback is a key characteristic to develop student learning and achievement of learning outcomes.  \n\nAdapted for the UNSW context from Bearman, M., Dawson, P., Boud, D., Hall, M., Bennett, S., Molloy, E., & Joughin, G., (2014), Guide to the Assessment Design Decisions Framework, http://www.assessmentdecisions.org/guide  \nSambell, K. Brown, S. (2020) The changing landscape of assessment: some possible replacements for unseen, time-constrained, face-to-face invigilated exams\nSambell, K. Brown, S. (2020) Paper for post-Covid19 SEDA Educational Developments Special issue Changing assessment for good: a major opportunity for educational developers\nSambell, K. Brown, S. (2020) Contingency planning: exploring rapid alternatives to face-to-face assessment https://sally-brown.net/kay-sambell-and-sally-brown-covid-19-assessment-collection/"]},"tp":"item"},{"i":"ioa1cocyj007","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:24px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:24px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Layer</span></p>","a":"<p><b>Layer</b></p>","r":[],"d":["Layer"]},"co":5723323,"tp":"group","rd":0},{"i":"4qngh8k5pr2o","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:32px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:32px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Learning Outcomes</span></p>","a":"<p><b>Learning Outcomes</b></p>","r":[],"d":["Learning Outcomes"]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Advanced</span></p><p style=\"text-align:justify;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Learning outcomes are most effective when they incorporate the , real world purpose for the course, programme and interdisciplinary objectives. Allowing students input on the personal goals of assessment can also increase student motivation and utilize learning outcomes to optimize their experience of learning and assessment. </span></p><ul><li style=\"line-height:1.275em;padding-top:0.4em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/sites/default/files/upload-files/UNSW%20Learning%20Outcomes%20Guide.pdf\" href=\"https://teaching.unsw.edu.au/sites/default/files/upload-files/UNSW%20Learning%20Outcomes%20Guide.pdf\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">UNSW Learning Outcomes guide</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/integrated-curriculum-framework\" href=\"https://teaching.unsw.edu.au/integrated-curriculum-framework\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Integrated Curriculum Framework</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/curriculum-mapping\" href=\"https://teaching.unsw.edu.au/curriculum-mapping\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Curriculum alignment and mapping</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/graduate-capabilities\" href=\"https://teaching.unsw.edu.au/graduate-capabilities\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Skills and graduate attributes</span></a><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> </span></li></ul><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;\">​</span></p>","a":"<p><u>Advanced</u></p><p>Learning outcomes are most effective when they incorporate the , real world purpose for the course, programme and interdisciplinary objectives. Allowing students input on the personal goals of assessment can also increase student motivation and utilize learning outcomes to optimize their experience of learning and assessment. </p><ul><li><a title=\"https://teaching.unsw.edu.au/sites/default/files/upload-files/UNSW%20Learning%20Outcomes%20Guide.pdf\" href=\"https://teaching.unsw.edu.au/sites/default/files/upload-files/UNSW%20Learning%20Outcomes%20Guide.pdf\" target=\"_blank\"><u>UNSW Learning Outcomes guide</u></a></li><li><a title=\"https://teaching.unsw.edu.au/integrated-curriculum-framework\" href=\"https://teaching.unsw.edu.au/integrated-curriculum-framework\" target=\"_blank\"><u>Integrated Curriculum Framework</u></a></li><li><a title=\"https://teaching.unsw.edu.au/curriculum-mapping\" href=\"https://teaching.unsw.edu.au/curriculum-mapping\" target=\"_blank\"><u>Curriculum alignment and mapping</u></a></li><li><a title=\"https://teaching.unsw.edu.au/graduate-capabilities\" href=\"https://teaching.unsw.edu.au/graduate-capabilities\" target=\"_blank\"><u>Skills and graduate attributes</u></a> </li></ul><p></p>","r":[],"d":["Advanced\nLearning outcomes are most effective when they incorporate the , real world purpose for the course, programme and interdisciplinary objectives. Allowing students input on the personal goals of assessment can also increase student motivation and utilize learning outcomes to optimize their experience of learning and assessment. \nUNSW Learning Outcomes guide\nIntegrated Curriculum Framework\nCurriculum alignment and mapping\nSkills and graduate attributes \n"]},"tp":"item"},{"i":"leczvjcrr3z0","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:32px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:32px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Approaches to assessment</span></p>","a":"<p><b>Approaches to assessment</b></p>","r":[],"d":["Approaches to assessment"]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Advanced</span></p><p style=\"text-align:justify;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Approaches to assessment can be applied to make assessment more applicable to real world environments, develop abilities to work across disciplines, be creative and analytical. Students and employers can be more actively involved in creating the structures and criteria by which they will be assessed. </span></p><p style=\"text-align:justify;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">This layer typically involves: ​ </span></p><ul><li style=\"line-height:1.275em;padding-top:0.4em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/authentic-assessment\" href=\"https://teaching.unsw.edu.au/authentic-assessment\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Authentic Assessment</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Assessment to drive Learning</span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Guided Inquiry</span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/work-integrated-learning\" href=\"https://teaching.unsw.edu.au/work-integrated-learning\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">WIL</span></a></li></ul><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;\">​</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;\">​</span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">English, M. C. , &amp; Kitsantas, A. (2013). Supporting Student Self-Regulated Learning in Problem- and Project-Based Learning. Interdisciplinary Journal of Problem-Based Learning, 7(2). </span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Calvin Douglas Smith , Kate Worsfold , Lynda Davies , Ron Fisher &amp; Ruth McPhail (2013) Assessment literacy and student learning: the case for explicitly developing students ‘assessment literacy’, Assessment &amp; Evaluation in Higher Education, 38:1, 44-60, DOI: 10.1080/02602938.2011.598636 </span></p>","a":"<p><u>Advanced</u></p><p>Approaches to assessment can be applied to make assessment more applicable to real world environments, develop abilities to work across disciplines, be creative and analytical. Students and employers can be more actively involved in creating the structures and criteria by which they will be assessed. </p><p>This layer typically involves: ​ </p><ul><li><a title=\"https://teaching.unsw.edu.au/authentic-assessment\" href=\"https://teaching.unsw.edu.au/authentic-assessment\" target=\"_blank\"><u>Authentic Assessment</u></a></li><li>Assessment to drive Learning</li><li>Guided Inquiry</li><li><a title=\"https://teaching.unsw.edu.au/work-integrated-learning\" href=\"https://teaching.unsw.edu.au/work-integrated-learning\" target=\"_blank\"><u>WIL</u></a></li></ul><p></p><p></p><p>English, M. C. , &amp; Kitsantas, A. (2013). Supporting Student Self-Regulated Learning in Problem- and Project-Based Learning. Interdisciplinary Journal of Problem-Based Learning, 7(2). </p><p>Calvin Douglas Smith , Kate Worsfold , Lynda Davies , Ron Fisher &amp; Ruth McPhail (2013) Assessment literacy and student learning: the case for explicitly developing students ‘assessment literacy’, Assessment &amp; Evaluation in Higher Education, 38:1, 44-60, DOI: 10.1080/02602938.2011.598636 </p>","r":[],"d":["Advanced\nApproaches to assessment can be applied to make assessment more applicable to real world environments, develop abilities to work across disciplines, be creative and analytical. Students and employers can be more actively involved in creating the structures and criteria by which they will be assessed. \nThis layer typically involves:  \nAuthentic Assessment\nAssessment to drive Learning\nGuided Inquiry\nWIL\n\n\nEnglish, M. C. , & Kitsantas, A. (2013). Supporting Student Self-Regulated Learning in Problem- and Project-Based Learning. Interdisciplinary Journal of Problem-Based Learning, 7(2). \nCalvin Douglas Smith , Kate Worsfold , Lynda Davies , Ron Fisher & Ruth McPhail (2013) Assessment literacy and student learning: the case for explicitly developing students ‘assessment literacy’, Assessment & Evaluation in Higher Education, 38:1, 44-60, DOI: 10.1080/02602938.2011.598636 "]},"tp":"item"},{"i":"9qxjr50a12d","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:32px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:32px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Assessment tasks</span></p>","a":"<p><b>Assessment tasks</b></p>","r":[],"d":["Assessment tasks"]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Advanced</span></p><p style=\"text-align:justify;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Assessment tasks are most effective when students are able to utilise them document their learning. At this stage the approach to assessment becomes most significant and the outcome a way to collect an artefact that can be used as point for discussing learning and feedback processes. </span></p><ul><li style=\"line-height:1.275em;padding-top:0.4em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/selecting-assessment-methods\" href=\"https://teaching.unsw.edu.au/selecting-assessment-methods\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Selecting Assessment Methods</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Alternative assessment types</span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Clinical and Lab</span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/assessing-extended-writing\" href=\"https://teaching.unsw.edu.au/assessing-extended-writing\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Extended writing</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Performance based</span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/assessing-portfolio\" href=\"https://teaching.unsw.edu.au/assessing-portfolio\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Portfolios</span></a><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> (Programmatic)</span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Project-based</span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Problem based</span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/assessing-studio-based-learning\" href=\"https://teaching.unsw.edu.au/assessing-studio-based-learning\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Studio-based </span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/work-integrated-learning\" href=\"https://teaching.unsw.edu.au/work-integrated-learning\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Work Integrated Learning</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Other</span></li></ul>","a":"<p><u>Advanced</u></p><p>Assessment tasks are most effective when students are able to utilise them document their learning. At this stage the approach to assessment becomes most significant and the outcome a way to collect an artefact that can be used as point for discussing learning and feedback processes. </p><ul><li><a title=\"https://teaching.unsw.edu.au/selecting-assessment-methods\" href=\"https://teaching.unsw.edu.au/selecting-assessment-methods\" target=\"_blank\"><u>Selecting Assessment Methods</u></a></li><li>Alternative assessment types</li><li>Clinical and Lab</li><li><a title=\"https://teaching.unsw.edu.au/assessing-extended-writing\" href=\"https://teaching.unsw.edu.au/assessing-extended-writing\" target=\"_blank\"><u>Extended writing</u></a></li><li>Performance based</li><li><a title=\"https://teaching.unsw.edu.au/assessing-portfolio\" href=\"https://teaching.unsw.edu.au/assessing-portfolio\" target=\"_blank\"><u>Portfolios</u></a> (Programmatic)</li><li>Project-based</li><li>Problem based</li><li><a title=\"https://teaching.unsw.edu.au/assessing-studio-based-learning\" href=\"https://teaching.unsw.edu.au/assessing-studio-based-learning\" target=\"_blank\"><u>Studio-based </u></a></li><li><a title=\"https://teaching.unsw.edu.au/work-integrated-learning\" href=\"https://teaching.unsw.edu.au/work-integrated-learning\" target=\"_blank\"><u>Work Integrated Learning</u></a></li><li>Other</li></ul>","r":[],"d":["Advanced\nAssessment tasks are most effective when students are able to utilise them document their learning. At this stage the approach to assessment becomes most significant and the outcome a way to collect an artefact that can be used as point for discussing learning and feedback processes. \nSelecting Assessment Methods\nAlternative assessment types\nClinical and Lab\nExtended writing\nPerformance based\nPortfolios (Programmatic)\nProject-based\nProblem based\nStudio-based \nWork Integrated Learning\nOther"]},"tp":"item"},{"i":"53imh7a568al","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:32px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:32px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Design and support</span></p>","a":"<p><b>Design and support</b></p>","r":[],"d":["Design and support"]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Advanced</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Support student learning by implementing design structures and scaffolds for a diverse range of students. Create opportunities for them to provide feedback on assessment design that might assist their ability to learn and complete the assessment. </span></p><ul><li style=\"line-height:1.275em;padding-top:0.4em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://www.gs.unsw.edu.au/policy/documents/assessmentdesignprocedure.pdf\" href=\"https://www.gs.unsw.edu.au/policy/documents/assessmentdesignprocedure.pdf\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Assessment Design Procedure</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/assessing-inclusively\" href=\"https://teaching.unsw.edu.au/assessing-inclusively\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Assessing inclusively </span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/assessment-responding-cross-cultural-diversity\" href=\"https://teaching.unsw.edu.au/assessment-responding-cross-cultural-diversity\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Cross cultural diversity</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/designing-assessment-learning\" href=\"https://teaching.unsw.edu.au/designing-assessment-learning\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Designing assessment </span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/covid-19-exam-adjustment-guide-online-delivery\" href=\"https://teaching.unsw.edu.au/covid-19-exam-adjustment-guide-online-delivery\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Exam adjustments</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/universal-design-learning-udl\" href=\"https://teaching.unsw.edu.au/universal-design-learning-udl\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Universal Design for Learning</span></a></li></ul><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\">​<span style=\"font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> </span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Hernandez, R. 2012. Does continuous assessment in higher education support student learning?, Higher Education, 64:489-502. </span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">English, M. C. , &amp; Kitsantas, A. (2013). Supporting Student Self-Regulated Learning in Problem- and Project-Based Learning. Interdisciplinary Journal of Problem-Based Learning, 7(2). </span></p>","a":"<p><u>Advanced</u></p><p>Support student learning by implementing design structures and scaffolds for a diverse range of students. Create opportunities for them to provide feedback on assessment design that might assist their ability to learn and complete the assessment. </p><ul><li><a title=\"https://www.gs.unsw.edu.au/policy/documents/assessmentdesignprocedure.pdf\" href=\"https://www.gs.unsw.edu.au/policy/documents/assessmentdesignprocedure.pdf\" target=\"_blank\"><u>Assessment Design Procedure</u></a></li><li><a title=\"https://teaching.unsw.edu.au/assessing-inclusively\" href=\"https://teaching.unsw.edu.au/assessing-inclusively\" target=\"_blank\"><u>Assessing inclusively </u></a></li><li><a title=\"https://teaching.unsw.edu.au/assessment-responding-cross-cultural-diversity\" href=\"https://teaching.unsw.edu.au/assessment-responding-cross-cultural-diversity\" target=\"_blank\"><u>Cross cultural diversity</u></a></li><li><a title=\"https://teaching.unsw.edu.au/designing-assessment-learning\" href=\"https://teaching.unsw.edu.au/designing-assessment-learning\" target=\"_blank\"><u>Designing assessment </u></a></li><li><a title=\"https://teaching.unsw.edu.au/covid-19-exam-adjustment-guide-online-delivery\" href=\"https://teaching.unsw.edu.au/covid-19-exam-adjustment-guide-online-delivery\" target=\"_blank\"><u>Exam adjustments</u></a></li><li><a title=\"https://teaching.unsw.edu.au/universal-design-learning-udl\" href=\"https://teaching.unsw.edu.au/universal-design-learning-udl\" target=\"_blank\"><u>Universal Design for Learning</u></a></li></ul><p>​ </p><p>Hernandez, R. 2012. Does continuous assessment in higher education support student learning?, Higher Education, 64:489-502. </p><p>English, M. C. , &amp; Kitsantas, A. (2013). Supporting Student Self-Regulated Learning in Problem- and Project-Based Learning. Interdisciplinary Journal of Problem-Based Learning, 7(2). </p>","r":[],"d":["Advanced\nSupport student learning by implementing design structures and scaffolds for a diverse range of students. Create opportunities for them to provide feedback on assessment design that might assist their ability to learn and complete the assessment. \nAssessment Design Procedure\nAssessing inclusively \nCross cultural diversity\nDesigning assessment \nExam adjustments\nUniversal Design for Learning\n \nHernandez, R. 2012. Does continuous assessment in higher education support student learning?, Higher Education, 64:489-502. \nEnglish, M. C. , & Kitsantas, A. (2013). Supporting Student Self-Regulated Learning in Problem- and Project-Based Learning. Interdisciplinary Journal of Problem-Based Learning, 7(2). "]},"tp":"item"},{"i":"ffx56ze2d48y","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:32px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:32px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Feedback</span></p>","a":"<p><b>Feedback</b></p>","r":[],"d":["Feedback"]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Advanced</span></p><p style=\"text-align:justify;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Feedback is most useful to students when they are directly involved in understanding the outcomes of quality learning and receive multiple feedback inputs (eg. peers, teachers, external professionals) which provide pathways to future development both within the course and beyond. ​ </span></p><ul><li style=\"line-height:1.275em;padding-top:0.4em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Criteria and </span><a title=\"https://teaching.unsw.edu.au/assessment-rubrics\" href=\"https://teaching.unsw.edu.au/assessment-rubrics\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">rubrics</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Marking guides</span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/peer-assessment\" href=\"https://teaching.unsw.edu.au/peer-assessment\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Peer feedback</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Previous assessment evaluation of success</span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Provide multiple feedback opportunities</span></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/self-assessment\" href=\"https://teaching.unsw.edu.au/self-assessment\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Student self-assessment</span></a></li></ul><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;\">​</span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Dawson, Phillip. (2015). Assessment rubrics: towards clearer and more replicable design, research and practice. Assessment &amp; Evaluation in Higher Education. 10.1080/02602938.2015.1111294. </span></p>","a":"<p><u>Advanced</u></p><p>Feedback is most useful to students when they are directly involved in understanding the outcomes of quality learning and receive multiple feedback inputs (eg. peers, teachers, external professionals) which provide pathways to future development both within the course and beyond. ​ </p><ul><li>Criteria and <a title=\"https://teaching.unsw.edu.au/assessment-rubrics\" href=\"https://teaching.unsw.edu.au/assessment-rubrics\" target=\"_blank\"><u>rubrics</u></a></li><li>Marking guides</li><li><a title=\"https://teaching.unsw.edu.au/peer-assessment\" href=\"https://teaching.unsw.edu.au/peer-assessment\" target=\"_blank\"><u>Peer feedback</u></a></li><li>Previous assessment evaluation of success</li><li>Provide multiple feedback opportunities</li><li><a title=\"https://teaching.unsw.edu.au/self-assessment\" href=\"https://teaching.unsw.edu.au/self-assessment\" target=\"_blank\"><u>Student self-assessment</u></a></li></ul><p></p><p>Dawson, Phillip. (2015). Assessment rubrics: towards clearer and more replicable design, research and practice. Assessment &amp; Evaluation in Higher Education. 10.1080/02602938.2015.1111294. </p>","r":[],"d":["Advanced\nFeedback is most useful to students when they are directly involved in understanding the outcomes of quality learning and receive multiple feedback inputs (eg. peers, teachers, external professionals) which provide pathways to future development both within the course and beyond.  \nCriteria and rubrics\nMarking guides\nPeer feedback\nPrevious assessment evaluation of success\nProvide multiple feedback opportunities\nStudent self-assessment\n\nDawson, Phillip. (2015). Assessment rubrics: towards clearer and more replicable design, research and practice. Assessment & Evaluation in Higher Education. 10.1080/02602938.2015.1111294. "]},"tp":"item"},{"i":"a4giu4ik4pi1","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:32px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:32px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Evaluate success</span></p>","a":"<p><b>Evaluate success</b></p>","r":[],"d":["Evaluate success"]},"c":{"h":"<p style=\"text-align:justify;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Advanced</span></p><p style=\"text-align:justify;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Develop and collect data from a variety of sources to evaluate the ability of assessment design to support student learning. Utilise students’ perspectives of their experience, student outcomes, colleagues peer review. </span></p><ul><li style=\"line-height:1.275em;padding-top:0.4em;padding-bottom:0em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/evaluating-learning-teaching\" href=\"https://teaching.unsw.edu.au/evaluating-learning-teaching\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Evaluating Learning and Teaching</span></a></li><li style=\"line-height:1.275em;padding-top:0.5249999999999999em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><a title=\"https://teaching.unsw.edu.au/reviewing-assessment-quality\" href=\"https://teaching.unsw.edu.au/reviewing-assessment-quality\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Review assessment quality</span></a></li></ul><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;\">​</span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Calvin Smith (2008) Building effectiveness in teaching through targeted evaluation and response: connecting evaluation to teaching improvement in higher education, Assessment &amp; Evaluation in Higher Education, 33:5, 517-533, DOI: 10.1080/02602930701698942 </span></p>","a":"<p><u>Advanced</u></p><p>Develop and collect data from a variety of sources to evaluate the ability of assessment design to support student learning. Utilise students’ perspectives of their experience, student outcomes, colleagues peer review. </p><ul><li><a title=\"https://teaching.unsw.edu.au/evaluating-learning-teaching\" href=\"https://teaching.unsw.edu.au/evaluating-learning-teaching\" target=\"_blank\"><u>Evaluating Learning and Teaching</u></a></li><li><a title=\"https://teaching.unsw.edu.au/reviewing-assessment-quality\" href=\"https://teaching.unsw.edu.au/reviewing-assessment-quality\" target=\"_blank\"><u>Review assessment quality</u></a></li></ul><p></p><p>Calvin Smith (2008) Building effectiveness in teaching through targeted evaluation and response: connecting evaluation to teaching improvement in higher education, Assessment &amp; Evaluation in Higher Education, 33:5, 517-533, DOI: 10.1080/02602930701698942 </p>","r":[],"d":["Advanced\nDevelop and collect data from a variety of sources to evaluate the ability of assessment design to support student learning. Utilise students’ perspectives of their experience, student outcomes, colleagues peer review. \nEvaluating Learning and Teaching\nReview assessment quality\n\nCalvin Smith (2008) Building effectiveness in teaching through targeted evaluation and response: connecting evaluation to teaching improvement in higher education, Assessment & Evaluation in Higher Education, 33:5, 517-533, DOI: 10.1080/02602930701698942 "]},"tp":"item"},{"i":"9ed3a4mykeab","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:24px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:24px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Layer</span></p>","a":"<p><b>Layer</b></p>","r":[],"d":["Layer"]},"co":5723323,"tp":"group","rd":0},{"i":"ms6mopvf5nou","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:32px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:32px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Advanced</span></p>","a":"<p><b>Advanced</b></p>","r":[],"d":["Advanced"]},"c":{"h":"<p style=\"text-align:justify;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:20px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Advanced assessment is part of a process that incorporates assessment in authentic contexts and enables students to take responsibility for their learning as to promote critical thinking. There are multiple feedback opportunities available to students, and a constant desire to be adaptive to the needs of the co-hort and individual students to support and extend their learning. </span></p><p style=\"text-align:justify;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;\">​</span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Adapted for the UNSW context from Bearman, M., Dawson, P., Boud, D., Hall, M., Bennett, S., Molloy, E., &amp; Joughin, G., (2014), Guide to the Assessment Design Decisions Framework, </span><a title=\"http://www.assessmentdecisions.org/guide\" href=\"http://www.assessmentdecisions.org/guide\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">http://www.assessmentdecisions.org/guide</span></a></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Scientia Education Academy and Digital Assessment CoP, (July 2020), The future of assessment at UNSW: A call to action. ​ Carless, David. </span><span style=\"font-size:14px;font-family:fnt3_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Excellence in University Assessment : Learning from Award-Winning Practice</span><span style=\"font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">, Taylor &amp; Francis Group, 2015. ​ </span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Scaling up Assessment for Learning in Higher Education, edited by David Carless, et al., Springer Singapore Pte. Limited, 2017.</span></p><p style=\"text-align:left;line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Sambell, K. Brown, S. (2020) The changing landscape of assessment: some possible replacements for unseen, time-constrained, face-to-face invigilated exams•</span><a title=\"https://sally-brown.net/kay-sambell-and-sally-brown-covid-19-assessment-collection/\" href=\"https://sally-brown.net/kay-sambell-and-sally-brown-covid-19-assessment-collection/\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">https://sally-brown.net/kay-sambell-and-sally-brown-covid-19-assessment-collection/</span></a><span style=\"font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> </span></p>","a":"<p>Advanced assessment is part of a process that incorporates assessment in authentic contexts and enables students to take responsibility for their learning as to promote critical thinking. There are multiple feedback opportunities available to students, and a constant desire to be adaptive to the needs of the co-hort and individual students to support and extend their learning. </p><p></p><p>Adapted for the UNSW context from Bearman, M., Dawson, P., Boud, D., Hall, M., Bennett, S., Molloy, E., &amp; Joughin, G., (2014), Guide to the Assessment Design Decisions Framework, <a title=\"http://www.assessmentdecisions.org/guide\" href=\"http://www.assessmentdecisions.org/guide\" target=\"_blank\"><u>http://www.assessmentdecisions.org/guide</u></a></p><p>Scientia Education Academy and Digital Assessment CoP, (July 2020), The future of assessment at UNSW: A call to action. ​ Carless, David. <i>Excellence in University Assessment : Learning from Award-Winning Practice</i>, Taylor &amp; Francis Group, 2015. ​ </p><p>Scaling up Assessment for Learning in Higher Education, edited by David Carless, et al., Springer Singapore Pte. Limited, 2017.</p><p>Sambell, K. Brown, S. (2020) The changing landscape of assessment: some possible replacements for unseen, time-constrained, face-to-face invigilated exams•<a title=\"https://sally-brown.net/kay-sambell-and-sally-brown-covid-19-assessment-collection/\" href=\"https://sally-brown.net/kay-sambell-and-sally-brown-covid-19-assessment-collection/\" target=\"_blank\"><u>https://sally-brown.net/kay-sambell-and-sally-brown-covid-19-assessment-collection/</u></a> </p>","r":[],"d":["Advanced assessment is part of a process that incorporates assessment in authentic contexts and enables students to take responsibility for their learning as to promote critical thinking. There are multiple feedback opportunities available to students, and a constant desire to be adaptive to the needs of the co-hort and individual students to support and extend their learning. \n\nAdapted for the UNSW context from Bearman, M., Dawson, P., Boud, D., Hall, M., Bennett, S., Molloy, E., & Joughin, G., (2014), Guide to the Assessment Design Decisions Framework, http://www.assessmentdecisions.org/guide\nScientia Education Academy and Digital Assessment CoP, (July 2020), The future of assessment at UNSW: A call to action.  Carless, David. Excellence in University Assessment : Learning from Award-Winning Practice, Taylor & Francis Group, 2015.  \nScaling up Assessment for Learning in Higher Education, edited by David Carless, et al., Springer Singapore Pte. Limited, 2017.\nSambell, K. Brown, S. (2020) The changing landscape of assessment: some possible replacements for unseen, time-constrained, face-to-face invigilated exams•https://sally-brown.net/kay-sambell-and-sally-brown-covid-19-assessment-collection/ "]},"tp":"item"}],"i":{"i":"gv7nnkymj04i","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:24px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:24px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Introduction</span></p>","a":"<p><b>Introduction</b></p>","r":[],"d":["Introduction"]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;\">​</span></p>","a":"<p></p>","r":[],"d":[]},"v":false},"s":{"i":"uc6a85f7o8sm","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:24px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:24px;font-family:fnt5_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Summary</span></p>","a":"<p><b>Summary</b></p>","r":[],"d":["Summary"]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_33080,fnt1_33080, Arial, Serif, Sans-Serif;\">​</span></p>","a":"<p></p>","r":[],"d":[]},"v":false}},"s":{"t":"Assessment Development Framework","te":true,"nbe":true,"ftw":true,"iw":2558,"ih":1440,"csc":1,"lar":true,"dat":3,"upb":false,"vl":4,"go":"normal"}},"s":{"f":{"t":{"tf":{"f":"fnt5_33080","s":24,"b":false,"i":false},"pf":{"t":"p","lh":1.15,"T":1,"b":0.5}},"nt":{"tf":{"f":"fnt4_33080","s":24,"b":false,"i":false},"pf":{"t":"p","lh":1.15,"T":1,"b":0.5}},"bt":{"tf":{"f":"fnt5_33080","s":24,"b":false,"i":false},"pf":{"t":"p","lh":1.15,"T":1,"b":0.5}}},"p":{"accessibilitySkinCreatedWith":"Created with iSpring evaluation version","backToAppButtonLabel":"Back","contentList":"Content List","emptySearchResult":"No matches found.","enableAccessibilityMode":"Enable screen reader mode","enableNormalMode":"Disable screen reader mode","nextButton":"","prevButton":"","search":"Search"},"c":{"i":"rsybw5b3122b","n":"Custom preset","s":{"i":{"bg":16250871,"b":14737632,"titc":16777215,"titb":5723991,"ci":true,"tb":16777215,"ttc":12500670,"ttb":11316396,"vit":14145495},"t":{"ti":4737096,"h":4737096,"s":4737096,"t":4737096,"H":5409759},"d":{"bg":16777215,"b":14737632},"ap":{"pb":15987699,"c":4737096,"plb":7368816},"p":{"pb":13554131,"plb":16777215,"bb":5409759,"hbb":4947401,"btc":16777215,"hbtc":16777215}}},"m":{"i":"mb0fr3z3br1m","n":"Visuals.Common.Editor.ColorScheme.Name.LightBlue","s":{"i":{"bg":16250871,"b":14737632,"titc":16777215,"titb":5723991,"ci":true,"tb":16777215,"ttc":4737096,"ttb":11316396,"vit":14145495},"t":{"ti":4737096,"h":4737096,"s":4737096,"t":4737096,"H":5409759},"d":{"bg":16777215,"b":14737632},"ap":{"pb":15987699,"c":4737096,"plb":7368816},"p":{"pb":13554131,"plb":16777215,"bb":5409759,"hbb":3898324,"btc":16777215,"hbtc":16777215}}}},"ps":"{\n    \"c\" : {\n        \"P\" : {\n            \"e\" : false,\n            \"l\" : false,\n            \"m\" : \"presentationTimeline\",\n            \"v\" : false\n        },\n        \"l\" : false,\n        \"n\" : \"bySteps\",\n        \"o\" : false,\n        \"p\" : false,\n        \"r\" : false,\n        \"s\" : false,\n        \"v\" : true,\n        \"w\" : false,\n        \"x\" : false,\n        \"z\" : true\n    },\n    \"l\" : {\n        \"button.content.normal\" : \"#FFFFFF\",\n        \"button.content.over\" : \"#FFFFFF\",\n        \"button.face.normal\" : \"#528BDF\",\n        \"button.face.over\" : \"#4B7DC9\",\n        \"companyLogo.background\" : \"#F3F3F3\",\n        \"hyperlink\" : \"#528BDF\",\n        \"listItem.face.over\" : \"#E1E2E2\",\n        \"listItem.face.pressed\" : \"#9DA2A6\",\n        \"listItem.label.over\" : \"#47484A\",\n        \"listItem.label.pressed\" : \"#FFFFFF\",\n        \"listItem.label.visited\" : \"#727374\",\n        \"page.background\" : \"#CED1D3\",\n        \"panel.background\" : \"#FFFFFF\",\n        \"panel.text\" : \"#47484A\",\n        \"player.background\" : \"#FFFFFF\",\n        \"popup.background\" : \"#F3F3F3\",\n        \"progress.background\" : \"#F7F7F7\",\n        \"progress.loading\" : \"#D9D9D9\",\n        \"progress.playback\" : \"#528BDF\",\n        \"slide.border\" : \"#E0E0E0\",\n        \"text\" : \"#47484A\"\n    },\n    \"o\" : {\n        \"h\" : true,\n        \"m\" : true,\n        \"n\" : true,\n        \"s\" : true,\n        \"t\" : true\n    },\n    \"s\" : {\n        \"L\" : false,\n        \"l\" : false,\n        \"n\" : false,\n        \"o\" : false,\n        \"p\" : false,\n        \"v\" : false\n    },\n    \"t\" : {\n        \"b\" : [ \"markerTools\", \"attachments\" ],\n        \"bl\" : false,\n        \"c\" : false,\n        \"l\" : false,\n        \"v\" : false\n    }\n}","sb":"C:/Users/z3530984/Desktop/Assessment Framework (Published)/data/interaction_bg_0.png","fp":false,"rs":{"a":{},"v":{},"i":{"C:/Users/z3530984/Desktop/Assessment Framework (Published)/data/interaction_bg_0.png":{"s":"intr1\\images\\interaction_bg_0.png","v":1280,"h":720}}},"fs":{"fnt0_33080":["intr1/fonts/fnt0.woff"],"fnt1_33080":["intr1/fonts/fnt1.woff"],"fnt2_33080":["intr1/fonts/fnt2.woff"],"fnt3_33080":["intr1/fonts/fnt3.woff"],"fnt4_33080":["intr1/fonts/fnt4.woff"],"fnt5_33080":["intr1/fonts/fnt5.woff"]},"S":{"fnt0_33080":{"f":"Open Sans","b":false,"i":false},"fnt1_33080":{"f":"Open Sans","b":false,"i":false},"fnt2_33080":{"f":"Open Sans","b":true,"i":false},"fnt3_33080":{"f":"Open Sans","b":false,"i":true},"fnt4_33080":{"f":"Segoe UI","b":false,"i":false},"fnt5_33080":{"f":"Segoe UI","b":true,"i":false}},"v":{}}";
	var skinSettings = {};
	loadHandler&&loadHandler(0, 'interactivity_wrbxxg49qp7l', interactionJson, skinSettings);
	})();